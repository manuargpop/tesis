# Form implementation generated from reading ui file 'main_menu-v6-1t.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

from datetime import datetime
from math import log
import pickle
from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtCore import QPropertyAnimation, QEasingCurve, QParallelAnimationGroup
from PyQt6.QtGui import QIntValidator
from PyQt6.QtWidgets import QMessageBox, QSpinBox, QHeaderView
from dateutil.relativedelta import relativedelta
from fpdf import FPDF

from animation_settings import *
import os


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1358, 732)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.mainwindow = QtWidgets.QFrame(parent=self.centralwidget)
        self.mainwindow.setStyleSheet("background-color: rgb(226, 231, 255)")
        self.mainwindow.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.mainwindow.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.mainwindow.setObjectName("mainwindow")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.mainwindow)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.menu = QtWidgets.QFrame(parent=self.mainwindow)
        self.menu.setMinimumSize(QtCore.QSize(51, 0))
        self.menu.setMaximumSize(QtCore.QSize(0, 16777215))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(10)
        self.menu.setFont(font)
        self.menu.setStyleSheet("background-color: rgb(0, 0, 61);\n"
"color: white;")
        self.menu.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.menu.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.menu.setObjectName("menu")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.menu)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.options = QtWidgets.QFrame(parent=self.menu)
        self.options.setMinimumSize(QtCore.QSize(240, 0))
        self.options.setMaximumSize(QtCore.QSize(240, 16777215))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        self.options.setFont(font)
        self.options.setStyleSheet("QPushButton {\n"
"border: 0px solid;\n"
"color: white;\n"
"text-align: left;\n"
"padding-left: 9px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"background-color: rgb(0, 0, 30);\n"
"color: white;\n"
"border-left: 3px solid;\n"
"border-color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QLabel {\n"
"color: white;\n"
"}")
        self.options.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.options.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.options.setObjectName("options")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.options)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.lbl_name_program = QtWidgets.QLabel(parent=self.options)
        self.lbl_name_program.setMinimumSize(QtCore.QSize(0, 80))
        self.lbl_name_program.setMaximumSize(QtCore.QSize(16777215, 80))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(19)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.lbl_name_program.setFont(font)
        self.lbl_name_program.setStyleSheet("color: white;")
        self.lbl_name_program.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_name_program.setObjectName("lbl_name_program")
        self.verticalLayout_3.addWidget(self.lbl_name_program, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.btn_menu = QtWidgets.QPushButton(parent=self.options)
        self.btn_menu.setMinimumSize(QtCore.QSize(0, 50))
        self.btn_menu.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(12)
        self.btn_menu.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/menu-lockw.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.btn_menu.setIcon(icon)
        self.btn_menu.setIconSize(QtCore.QSize(30, 30))
        self.btn_menu.setObjectName("btn_menu")
        self.verticalLayout_3.addWidget(self.btn_menu)
        self.btn_paciente = QtWidgets.QPushButton(parent=self.options)
        self.btn_paciente.setMinimumSize(QtCore.QSize(0, 50))
        self.btn_paciente.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(12)
        self.btn_paciente.setFont(font)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("icons/patient.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.btn_paciente.setIcon(icon1)
        self.btn_paciente.setIconSize(QtCore.QSize(30, 30))
        self.btn_paciente.setObjectName("btn_paciente")
        self.verticalLayout_3.addWidget(self.btn_paciente)
        self.btn_estadistica_patient = QtWidgets.QPushButton(parent=self.options)
        self.btn_estadistica_patient.setMinimumSize(QtCore.QSize(0, 50))
        self.btn_estadistica_patient.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(12)
        self.btn_estadistica_patient.setFont(font)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("icons/analytics.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.btn_estadistica_patient.setIcon(icon2)
        self.btn_estadistica_patient.setIconSize(QtCore.QSize(30, 30))
        self.btn_estadistica_patient.setObjectName("btn_estadistica_patient")
        self.verticalLayout_3.addWidget(self.btn_estadistica_patient)
        self.btn_model3D = QtWidgets.QPushButton(parent=self.options)
        self.btn_model3D.setMinimumSize(QtCore.QSize(0, 50))
        self.btn_model3D.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(12)
        self.btn_model3D.setFont(font)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("icons/3d.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.btn_model3D.setIcon(icon3)
        self.btn_model3D.setIconSize(QtCore.QSize(30, 30))
        self.btn_model3D.setObjectName("btn_model3D")
        self.verticalLayout_3.addWidget(self.btn_model3D)
        self.btn_db = QtWidgets.QPushButton(parent=self.options)
        self.btn_db.setMinimumSize(QtCore.QSize(0, 50))
        self.btn_db.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(12)
        self.btn_db.setFont(font)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("icons/db.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.btn_db.setIcon(icon4)
        self.btn_db.setIconSize(QtCore.QSize(30, 30))
        self.btn_db.setObjectName("btn_db")
        self.verticalLayout_3.addWidget(self.btn_db)
        self.verticalLayout_2.addWidget(self.options, 0, QtCore.Qt.AlignmentFlag.AlignTop)
        self.btn_creditos = QtWidgets.QPushButton(parent=self.menu)
        self.btn_creditos.setMinimumSize(QtCore.QSize(240, 50))
        self.btn_creditos.setMaximumSize(QtCore.QSize(240, 50))
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(12)
        self.btn_creditos.setFont(font)
        self.btn_creditos.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.btn_creditos.setStyleSheet("QPushButton {\n"
"border: 0px solid;\n"
"color: white;\n"
"text-align: left;\n"
"padding-left: 9px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"background-color: rgb(0, 0, 30);\n"
"color: white;\n"
"border-left: 3px solid;\n"
"border-color: rgb(255, 255, 255);\n"
"}")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("icons/credit.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.btn_creditos.setIcon(icon5)
        self.btn_creditos.setIconSize(QtCore.QSize(30, 30))
        self.btn_creditos.setObjectName("btn_creditos")
        self.verticalLayout_2.addWidget(self.btn_creditos)
        self.horizontalLayout.addWidget(self.menu)
        self.content = QtWidgets.QStackedWidget(parent=self.mainwindow)
        self.content.setStyleSheet("background-color: rgb(226, 231, 255)")
        self.content.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.content.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.content.setObjectName("content")
        self.Inicio = QtWidgets.QWidget()
        self.Inicio.setObjectName("Inicio")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.Inicio)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.frame = QtWidgets.QFrame(parent=self.Inicio)
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout_5.setContentsMargins(0, 0, -1, -1)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label = QtWidgets.QLabel(parent=self.frame)
        self.label.setObjectName("label")
        self.verticalLayout_5.addWidget(self.label)
        self.verticalLayout_4.addWidget(self.frame)
        self.content.addWidget(self.Inicio)
        self.Paciente = QtWidgets.QWidget()
        self.Paciente.setObjectName("Paciente")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.Paciente)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setSpacing(0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.content_patient = QtWidgets.QStackedWidget(parent=self.Paciente)
        self.content_patient.setStyleSheet("QLineEdit {\n"
"background-color: white;\n"
"border: 1px solid;\n"
"border-color: rgb(0, 0, 61);\n"
"border-radius: 3px;\n"
"}\n"
"\n"
"QComboBox {\n"
"background-color: white;\n"
"border: 1px solid;\n"
"border-color: rgb(0, 0, 61);\n"
"border-radius: 3px;\n"
"}\n"
"\n"
"QDateEdit {\n"
"background-color: white;\n"
"border: 1px solid;\n"
"border-color: rgb(0, 0, 61);\n"
"border-radius: 3px;\n"
"}")
        self.content_patient.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.content_patient.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.content_patient.setObjectName("content_patient")
        self.Pacientes = QtWidgets.QWidget()
        self.Pacientes.setObjectName("Pacientes")
        self.verticalLayout_18 = QtWidgets.QVBoxLayout(self.Pacientes)
        self.verticalLayout_18.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_18.setSpacing(0)
        self.verticalLayout_18.setObjectName("verticalLayout_18")
        self.fr_patient = QtWidgets.QFrame(parent=self.Pacientes)
        self.fr_patient.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_patient.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_patient.setObjectName("fr_patient")
        self.verticalLayout_17 = QtWidgets.QVBoxLayout(self.fr_patient)
        self.verticalLayout_17.setObjectName("verticalLayout_17")
        self.lbl_title_p = QtWidgets.QFrame(parent=self.fr_patient)
        self.lbl_title_p.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.lbl_title_p.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.lbl_title_p.setObjectName("lbl_title_p")
        self.verticalLayout_19 = QtWidgets.QVBoxLayout(self.lbl_title_p)
        self.verticalLayout_19.setObjectName("verticalLayout_19")
        self.lbl_tablep = QtWidgets.QLabel(parent=self.lbl_title_p)
        self.lbl_tablep.setMinimumSize(QtCore.QSize(250, 80))
        self.lbl_tablep.setMaximumSize(QtCore.QSize(250, 80))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(19)
        font.setBold(True)
        self.lbl_tablep.setFont(font)
        self.lbl_tablep.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_tablep.setObjectName("lbl_tablep")
        self.verticalLayout_19.addWidget(self.lbl_tablep, 0, QtCore.Qt.AlignmentFlag.AlignHCenter|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.verticalLayout_17.addWidget(self.lbl_title_p, 0, QtCore.Qt.AlignmentFlag.AlignHCenter|QtCore.Qt.AlignmentFlag.AlignTop)
        self.fr_tablep = QtWidgets.QFrame(parent=self.fr_patient)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fr_tablep.sizePolicy().hasHeightForWidth())
        self.fr_tablep.setSizePolicy(sizePolicy)
        self.fr_tablep.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_tablep.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_tablep.setObjectName("fr_tablep")
        self.verticalLayout_21 = QtWidgets.QVBoxLayout(self.fr_tablep)
        self.verticalLayout_21.setObjectName("verticalLayout_21")
        self.table_patient = QtWidgets.QTableWidget(parent=self.fr_tablep)
        self.table_patient.setMinimumSize(QtCore.QSize(0, 0))
        self.table_patient.setStyleSheet("QTableWidget {\n"
"background-color: white;\n"
"border: 2px solid;\n"
"border-color: rgb(0, 0, 61);\n"
"border-radius: 5px;\n"
"}")
        self.table_patient.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarPolicy.ScrollBarAlwaysOn)
        self.table_patient.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarPolicy.ScrollBarAlwaysOn)
        self.table_patient.setAlternatingRowColors(True)
        self.table_patient.setSelectionMode(QtWidgets.QAbstractItemView.SelectionMode.SingleSelection)
        self.table_patient.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectionBehavior.SelectRows)
        table_row = self.rows()
        self.table_patient.setRowCount(table_row)
        self.table_patient.setObjectName("table_patient")
        self.table_patient.setColumnCount(7)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        self.table_patient.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        self.table_patient.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        self.table_patient.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        self.table_patient.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        self.table_patient.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        self.table_patient.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        self.table_patient.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(QtCore.Qt.ItemFlag.ItemIsDragEnabled|QtCore.Qt.ItemFlag.ItemIsDropEnabled|QtCore.Qt.ItemFlag.ItemIsUserCheckable|QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_patient.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(QtCore.Qt.ItemFlag.ItemIsDragEnabled|QtCore.Qt.ItemFlag.ItemIsDropEnabled|QtCore.Qt.ItemFlag.ItemIsUserCheckable|QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_patient.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(QtCore.Qt.ItemFlag.ItemIsDragEnabled|QtCore.Qt.ItemFlag.ItemIsDropEnabled|QtCore.Qt.ItemFlag.ItemIsUserCheckable|QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_patient.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(QtCore.Qt.ItemFlag.ItemIsDragEnabled|QtCore.Qt.ItemFlag.ItemIsDropEnabled|QtCore.Qt.ItemFlag.ItemIsUserCheckable|QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_patient.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(QtCore.Qt.ItemFlag.ItemIsDragEnabled|QtCore.Qt.ItemFlag.ItemIsDropEnabled|QtCore.Qt.ItemFlag.ItemIsUserCheckable|QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_patient.setItem(0, 4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(QtCore.Qt.ItemFlag.ItemIsDragEnabled|QtCore.Qt.ItemFlag.ItemIsDropEnabled|QtCore.Qt.ItemFlag.ItemIsUserCheckable|QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_patient.setItem(0, 5, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(QtCore.Qt.ItemFlag.ItemIsDragEnabled|QtCore.Qt.ItemFlag.ItemIsDropEnabled|QtCore.Qt.ItemFlag.ItemIsUserCheckable|QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_patient.setItem(0, 6, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(11)
        item.setFont(font)
        self.table_patient.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(11)
        item.setFont(font)
        self.table_patient.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(11)
        item.setFont(font)
        self.table_patient.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(11)
        item.setFont(font)
        self.table_patient.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(11)
        item.setFont(font)
        self.table_patient.setItem(1, 4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(11)
        item.setFont(font)
        self.table_patient.setItem(1, 5, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(11)
        item.setFont(font)
        icon = QtGui.QIcon.fromTheme("accessories-text-editor")
        item.setIcon(icon)
        self.table_patient.setItem(1, 6, item)
        self.items()
        self.table_patient.horizontalHeader().setVisible(False)
        self.table_patient.horizontalHeader().setCascadingSectionResizes(False)
        self.table_patient.horizontalHeader().setDefaultSectionSize(160)
        self.table_patient.horizontalHeader().setHighlightSections(True)
        self.table_patient.horizontalHeader().setSortIndicatorShown(False)
        self.table_patient.horizontalHeader().setStretchLastSection(False)
        self.table_patient.verticalHeader().setVisible(False)
        self.table_patient.verticalHeader().setCascadingSectionResizes(False)
        self.table_patient.verticalHeader().setSortIndicatorShown(False)
        self.table_patient.verticalHeader().setStretchLastSection(False)
        self.verticalLayout_21.addWidget(self.table_patient)
        self.verticalLayout_17.addWidget(self.fr_tablep)
        self.fr_add = QtWidgets.QFrame(parent=self.fr_patient)
        self.fr_add.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_add.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_add.setObjectName("fr_add")
        self.verticalLayout_20 = QtWidgets.QVBoxLayout(self.fr_add)
        self.verticalLayout_20.setObjectName("verticalLayout_20")
        self.btn_add = QtWidgets.QPushButton(parent=self.fr_add)
        self.btn_add.setMinimumSize(QtCore.QSize(180, 50))
        self.btn_add.setMaximumSize(QtCore.QSize(180, 50))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(13)
        font.setBold(False)
        self.btn_add.setFont(font)
        self.btn_add.setStyleSheet("QPushButton {\n"
"background-color: rgb(0, 0, 61);\n"
"color: rgb(255, 255, 255);\n"
"border: 1px solid white;\n"
"border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"background-color: rgb(0, 0, 31);\n"
"color: white;\n"
"}")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("icons/add_patient.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.btn_add.setIcon(icon6)
        self.btn_add.setIconSize(QtCore.QSize(22, 22))
        self.btn_add.setObjectName("btn_add")
        self.verticalLayout_20.addWidget(self.btn_add, 0, QtCore.Qt.AlignmentFlag.AlignRight)
        self.verticalLayout_17.addWidget(self.fr_add)
        self.verticalLayout_18.addWidget(self.fr_patient)
        self.content_patient.addWidget(self.Pacientes)
        self.data_patient = QtWidgets.QWidget()
        self.data_patient.setStyleSheet("")
        self.data_patient.setObjectName("data_patient")
        self.verticalLayout_22 = QtWidgets.QVBoxLayout(self.data_patient)
        self.verticalLayout_22.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_22.setSpacing(0)
        self.verticalLayout_22.setObjectName("verticalLayout_22")
        self.ingresar_patient = QtWidgets.QStackedWidget(parent=self.data_patient)
        self.ingresar_patient.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.ingresar_patient.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.ingresar_patient.setObjectName("ingresar_patient")
        self.data_personal = QtWidgets.QWidget()
        self.data_personal.setStyleSheet("#first_data {\n"
"border: 2.5px solid;\n"
"border-color: rgb(0, 0, 61);\n"
"border-radius: 5px;\n"
"}\n"
"\n"
"#date_data {\n"
"border: 2.5px solid;\n"
"border-color: rgb(0, 0, 61);\n"
"border-radius: 5px;\n"
"}\n"
"\n"
"#data_deporte {\n"
"border: 2.5px solid;\n"
"border-color: rgb(0, 0, 61);\n"
"border-radius: 5px;\n"
"}\n"
"\n"
"#second_data {\n"
"border: 2.5px solid;\n"
"border-color: rgb(0, 0, 61);\n"
"border-radius: 5px;\n"
"}")
        self.data_personal.setObjectName("data_personal")
        self.verticalLayout_32 = QtWidgets.QVBoxLayout(self.data_personal)
        self.verticalLayout_32.setObjectName("verticalLayout_32")
        self.fr_title_p1 = QtWidgets.QFrame(parent=self.data_personal)
        self.fr_title_p1.setMinimumSize(QtCore.QSize(0, 60))
        self.fr_title_p1.setMaximumSize(QtCore.QSize(16777215, 60))
        self.fr_title_p1.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_title_p1.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_title_p1.setObjectName("fr_title_p1")
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout(self.fr_title_p1)
        self.horizontalLayout_13.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_13.setSpacing(0)
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.title1 = QtWidgets.QLabel(parent=self.fr_title_p1)
        self.title1.setMinimumSize(QtCore.QSize(250, 60))
        self.title1.setMaximumSize(QtCore.QSize(250, 60))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(19)
        font.setBold(True)
        self.title1.setFont(font)
        self.title1.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.title1.setObjectName("title1")
        self.horizontalLayout_13.addWidget(self.title1)
        self.verticalLayout_32.addWidget(self.fr_title_p1, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.first_data = QtWidgets.QFrame(parent=self.data_personal)
        self.first_data.setMinimumSize(QtCore.QSize(1000, 140))
        self.first_data.setMaximumSize(QtCore.QSize(1000, 140))
        self.first_data.setSizeIncrement(QtCore.QSize(0, 0))
        self.first_data.setStyleSheet("QFrame {\n"
"background-color: white;\n"
"}")
        self.first_data.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.first_data.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.first_data.setObjectName("first_data")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.first_data)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.fr_nombre = QtWidgets.QFrame(parent=self.first_data)
        self.fr_nombre.setMinimumSize(QtCore.QSize(230, 100))
        self.fr_nombre.setMaximumSize(QtCore.QSize(230, 100))
        self.fr_nombre.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_nombre.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_nombre.setObjectName("fr_nombre")
        self.verticalLayout_23 = QtWidgets.QVBoxLayout(self.fr_nombre)
        self.verticalLayout_23.setObjectName("verticalLayout_23")
        self.lbl_name = QtWidgets.QLabel(parent=self.fr_nombre)
        self.lbl_name.setMinimumSize(QtCore.QSize(100, 30))
        self.lbl_name.setMaximumSize(QtCore.QSize(100, 30))
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(12)
        self.lbl_name.setFont(font)
        self.lbl_name.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_name.setObjectName("lbl_name")
        self.verticalLayout_23.addWidget(self.lbl_name, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.name = QtWidgets.QLineEdit(parent=self.fr_nombre)
        self.name.setMinimumSize(QtCore.QSize(140, 22))
        self.name.setMaximumSize(QtCore.QSize(140, 22))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        self.name.setFont(font)
        self.name.setStyleSheet("")
        self.name.setText("")
        self.name.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.name.setObjectName("name")
        self.verticalLayout_23.addWidget(self.name, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.horizontalLayout_8.addWidget(self.fr_nombre, 0, QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.fr_ape = QtWidgets.QFrame(parent=self.first_data)
        self.fr_ape.setMinimumSize(QtCore.QSize(230, 100))
        self.fr_ape.setMaximumSize(QtCore.QSize(230, 100))
        self.fr_ape.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_ape.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_ape.setObjectName("fr_ape")
        self.verticalLayout_24 = QtWidgets.QVBoxLayout(self.fr_ape)
        self.verticalLayout_24.setObjectName("verticalLayout_24")
        self.lbl_ape = QtWidgets.QLabel(parent=self.fr_ape)
        self.lbl_ape.setMinimumSize(QtCore.QSize(100, 30))
        self.lbl_ape.setMaximumSize(QtCore.QSize(100, 30))
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(12)
        self.lbl_ape.setFont(font)
        self.lbl_ape.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_ape.setObjectName("lbl_ape")
        self.verticalLayout_24.addWidget(self.lbl_ape, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.apellido = QtWidgets.QLineEdit(parent=self.fr_ape)
        self.apellido.setMinimumSize(QtCore.QSize(140, 22))
        self.apellido.setMaximumSize(QtCore.QSize(140, 22))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        self.apellido.setFont(font)
        self.apellido.setObjectName("apellido")
        self.verticalLayout_24.addWidget(self.apellido, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.horizontalLayout_8.addWidget(self.fr_ape, 0, QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.fr_doc = QtWidgets.QFrame(parent=self.first_data)
        self.fr_doc.setMinimumSize(QtCore.QSize(230, 100))
        self.fr_doc.setMaximumSize(QtCore.QSize(230, 100))
        self.fr_doc.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_doc.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_doc.setObjectName("fr_doc")
        self.verticalLayout_25 = QtWidgets.QVBoxLayout(self.fr_doc)
        self.verticalLayout_25.setObjectName("verticalLayout_25")
        self.lbl_doc = QtWidgets.QLabel(parent=self.fr_doc)
        self.lbl_doc.setMinimumSize(QtCore.QSize(100, 30))
        self.lbl_doc.setMaximumSize(QtCore.QSize(100, 30))
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(12)
        self.lbl_doc.setFont(font)
        self.lbl_doc.setObjectName("lbl_doc")
        self.verticalLayout_25.addWidget(self.lbl_doc, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.input_documento = QtWidgets.QFrame(parent=self.fr_doc)
        self.input_documento.setMinimumSize(QtCore.QSize(0, 30))
        self.input_documento.setMaximumSize(QtCore.QSize(16777215, 30))
        self.input_documento.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.input_documento.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.input_documento.setObjectName("input_documento")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.input_documento)
        self.horizontalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_9.setSpacing(0)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.tipo_doc = QtWidgets.QComboBox(parent=self.input_documento)
        self.tipo_doc.setMinimumSize(QtCore.QSize(55, 22))
        self.tipo_doc.setMaximumSize(QtCore.QSize(55, 22))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        self.tipo_doc.setFont(font)
        self.tipo_doc.setStyleSheet("")
        self.tipo_doc.setObjectName("tipo_doc")
        self.tipo_doc.addItem("")
        self.horizontalLayout_9.addWidget(self.tipo_doc)
        self.documento = QtWidgets.QLineEdit(parent=self.input_documento)
        self.documento.setMinimumSize(QtCore.QSize(140, 22))
        self.documento.setMaximumSize(QtCore.QSize(140, 22))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        self.documento.setFont(font)
        self.documento.setObjectName("documento")
        self.horizontalLayout_9.addWidget(self.documento)
        self.verticalLayout_25.addWidget(self.input_documento)
        self.horizontalLayout_8.addWidget(self.fr_doc)
        self.fr_telf = QtWidgets.QFrame(parent=self.first_data)
        self.fr_telf.setMinimumSize(QtCore.QSize(230, 100))
        self.fr_telf.setMaximumSize(QtCore.QSize(230, 100))
        self.fr_telf.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_telf.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_telf.setObjectName("fr_telf")
        self.verticalLayout_26 = QtWidgets.QVBoxLayout(self.fr_telf)
        self.verticalLayout_26.setObjectName("verticalLayout_26")
        self.lbl_telf = QtWidgets.QLabel(parent=self.fr_telf)
        self.lbl_telf.setMinimumSize(QtCore.QSize(100, 30))
        self.lbl_telf.setMaximumSize(QtCore.QSize(100, 30))
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(12)
        self.lbl_telf.setFont(font)
        self.lbl_telf.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_telf.setObjectName("lbl_telf")
        self.verticalLayout_26.addWidget(self.lbl_telf, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.fr_input_telf = QtWidgets.QFrame(parent=self.fr_telf)
        self.fr_input_telf.setMinimumSize(QtCore.QSize(0, 30))
        self.fr_input_telf.setMaximumSize(QtCore.QSize(16777215, 30))
        self.fr_input_telf.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_input_telf.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_input_telf.setObjectName("fr_input_telf")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout(self.fr_input_telf)
        self.horizontalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_10.setSpacing(0)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.code_country = QtWidgets.QComboBox(parent=self.fr_input_telf)
        self.code_country.setMinimumSize(QtCore.QSize(55, 22))
        self.code_country.setMaximumSize(QtCore.QSize(55, 22))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        self.code_country.setFont(font)
        self.code_country.setStyleSheet("")
        self.code_country.setObjectName("code_country")
        self.code_country.addItem("")
        self.horizontalLayout_10.addWidget(self.code_country)
        self.telf = QtWidgets.QLineEdit(parent=self.fr_input_telf)
        self.telf.setMinimumSize(QtCore.QSize(140, 22))
        self.telf.setMaximumSize(QtCore.QSize(140, 22))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        self.telf.setFont(font)
        self.telf.setObjectName("telf")
        self.horizontalLayout_10.addWidget(self.telf)
        self.verticalLayout_26.addWidget(self.fr_input_telf, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.horizontalLayout_8.addWidget(self.fr_telf)
        self.verticalLayout_32.addWidget(self.first_data, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.second_data = QtWidgets.QFrame(parent=self.data_personal)
        self.second_data.setMinimumSize(QtCore.QSize(1000, 140))
        self.second_data.setMaximumSize(QtCore.QSize(1000, 140))
        self.second_data.setStyleSheet("background-color: white;\n"
"")
        self.second_data.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.second_data.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.second_data.setObjectName("second_data")
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout(self.second_data)
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.fr_fnacimiento = QtWidgets.QFrame(parent=self.second_data)
        self.fr_fnacimiento.setMinimumSize(QtCore.QSize(230, 100))
        self.fr_fnacimiento.setMaximumSize(QtCore.QSize(230, 100))
        self.fr_fnacimiento.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_fnacimiento.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_fnacimiento.setObjectName("fr_fnacimiento")
        self.verticalLayout_28 = QtWidgets.QVBoxLayout(self.fr_fnacimiento)
        self.verticalLayout_28.setObjectName("verticalLayout_28")
        self.lbl_fnacimiento = QtWidgets.QLabel(parent=self.fr_fnacimiento)
        self.lbl_fnacimiento.setMinimumSize(QtCore.QSize(160, 30))
        self.lbl_fnacimiento.setMaximumSize(QtCore.QSize(160, 30))
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(12)
        self.lbl_fnacimiento.setFont(font)
        self.lbl_fnacimiento.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_fnacimiento.setObjectName("lbl_fnacimiento")
        self.verticalLayout_28.addWidget(self.lbl_fnacimiento, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.fnacimiento = QtWidgets.QDateEdit(parent=self.fr_fnacimiento)
        self.fnacimiento.setMinimumSize(QtCore.QSize(150, 22))
        self.fnacimiento.setMaximumSize(QtCore.QSize(150, 22))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        self.fnacimiento.setFont(font)
        self.fnacimiento.setObjectName("fnacimiento")
        self.verticalLayout_28.addWidget(self.fnacimiento, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.horizontalLayout_12.addWidget(self.fr_fnacimiento)
        self.fr_sex = QtWidgets.QFrame(parent=self.second_data)
        self.fr_sex.setMinimumSize(QtCore.QSize(230, 100))
        self.fr_sex.setMaximumSize(QtCore.QSize(230, 100))
        self.fr_sex.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_sex.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_sex.setObjectName("fr_sex")
        self.verticalLayout_29 = QtWidgets.QVBoxLayout(self.fr_sex)
        self.verticalLayout_29.setObjectName("verticalLayout_29")
        self.lbl_sex = QtWidgets.QLabel(parent=self.fr_sex)
        self.lbl_sex.setMinimumSize(QtCore.QSize(100, 30))
        self.lbl_sex.setMaximumSize(QtCore.QSize(100, 30))
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(12)
        self.lbl_sex.setFont(font)
        self.lbl_sex.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_sex.setObjectName("lbl_sex")
        self.verticalLayout_29.addWidget(self.lbl_sex, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.sexo = QtWidgets.QComboBox(parent=self.fr_sex)
        self.sexo.setMinimumSize(QtCore.QSize(150, 22))
        self.sexo.setMaximumSize(QtCore.QSize(150, 22))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        self.sexo.setFont(font)
        self.sexo.setObjectName("sexo")
        self.sexo.addItem("")
        self.sexo.addItem("")
        self.verticalLayout_29.addWidget(self.sexo, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.horizontalLayout_12.addWidget(self.fr_sex)
        self.fr_tipo_pac = QtWidgets.QFrame(parent=self.second_data)
        self.fr_tipo_pac.setMinimumSize(QtCore.QSize(230, 100))
        self.fr_tipo_pac.setMaximumSize(QtCore.QSize(230, 100))
        self.fr_tipo_pac.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_tipo_pac.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_tipo_pac.setObjectName("fr_tipo_pac")
        self.verticalLayout_30 = QtWidgets.QVBoxLayout(self.fr_tipo_pac)
        self.verticalLayout_30.setObjectName("verticalLayout_30")
        self.lbl_tipo_pac = QtWidgets.QLabel(parent=self.fr_tipo_pac)
        self.lbl_tipo_pac.setMinimumSize(QtCore.QSize(150, 30))
        self.lbl_tipo_pac.setMaximumSize(QtCore.QSize(150, 30))
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(12)
        self.lbl_tipo_pac.setFont(font)
        self.lbl_tipo_pac.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_tipo_pac.setObjectName("lbl_tipo_pac")
        self.verticalLayout_30.addWidget(self.lbl_tipo_pac, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.tipo_pac = QtWidgets.QComboBox(parent=self.fr_tipo_pac)
        self.tipo_pac.setMinimumSize(QtCore.QSize(150, 22))
        self.tipo_pac.setMaximumSize(QtCore.QSize(150, 22))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        self.tipo_pac.setFont(font)
        self.tipo_pac.setObjectName("tipo_pac")
        self.tipo_pac.addItem("")
        self.tipo_pac.addItem("")
        self.tipo_pac.addItem("")
        self.verticalLayout_30.addWidget(self.tipo_pac, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.horizontalLayout_12.addWidget(self.fr_tipo_pac)
        self.fr_country = QtWidgets.QFrame(parent=self.second_data)
        self.fr_country.setMinimumSize(QtCore.QSize(230, 100))
        self.fr_country.setMaximumSize(QtCore.QSize(230, 100))
        self.fr_country.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_country.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_country.setObjectName("fr_country")
        self.verticalLayout_31 = QtWidgets.QVBoxLayout(self.fr_country)
        self.verticalLayout_31.setObjectName("verticalLayout_31")
        self.lbl_country = QtWidgets.QLabel(parent=self.fr_country)
        self.lbl_country.setMinimumSize(QtCore.QSize(150, 30))
        self.lbl_country.setMaximumSize(QtCore.QSize(150, 30))
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(12)
        self.lbl_country.setFont(font)
        self.lbl_country.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_country.setObjectName("lbl_country")
        self.verticalLayout_31.addWidget(self.lbl_country, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.country = QtWidgets.QComboBox(parent=self.fr_country)
        self.country.setMinimumSize(QtCore.QSize(150, 22))
        self.country.setMaximumSize(QtCore.QSize(150, 22))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        self.country.setFont(font)
        self.country.setObjectName("country")
        paises = ['Afghanistan',
                  'Albania',
                  'Algeria',
                  'Andorra',
                  'Angola',
                  'Antigua & Deps',
                  'Argentina',
                  'Armenia',
                  'Australia',
                  'Austria',
                  'Azerbaijan',
                  'Bahamas',
                  'Bahrain',
                  'Bangladesh',
                  'Barbados',
                  'Belarus',
                  'Belgium',
                  'Belize',
                  'Benin',
                  'Bhutan',
                  'Bolivia',
                  'Bosnia Herzegovina',
                  'Botswana',
                  'Brazil',
                  'Brunei',
                  'Bulgaria',
                  'Burkina',
                  'Burundi',
                  'Cambodia',
                  'Cameroon',
                  'Canada',
                  'Cape Verde',
                  'Central African Rep',
                  'Chad',
                  'Chile',
                  'China',
                  'Colombia',
                  'Comoros',
                  'Congo',
                  'Congo Democratic Rep',
                  'Costa Rica',
                  'Croatia',
                  'Cuba',
                  'Cyprus',
                  'Czech Republic',
                  'Denmark',
                  'Djibouti',
                  'Dominica',
                  'Dominican Republic',
                  'East Timor',
                  'Ecuador',
                  'Egypt',
                  'El Salvador',
                  'Equatorial Guinea',
                  'Eritrea',
                  'Estonia',
                  'Ethiopia',
                  'Fiji',
                  'Finland',
                  'France',
                  'Gabon',
                  'Gambia',
                  'Georgia',
                  'Germany',
                  'Ghana',
                  'Greece',
                  'Grenada',
                  'Guatemala',
                  'Guinea',
                  'Guinea-Bissau',
                  'Guyana',
                  'Haiti',
                  'Honduras',
                  'Hungary',
                  'Iceland',
                  'India',
                  'Indonesia',
                  'Iran',
                  'Iraq',
                  'Ireland Republic',
                  'Israel',
                  'Italy',
                  'Ivory Coast',
                  'Jamaica',
                  'Japan',
                  'Jordan',
                  'Kazakhstan',
                  'Kenya',
                  'Kiribati',
                  'Korea North',
                  'Korea South',
                  'Kosovo',
                  'Kuwait',
                  'Kyrgyzstan',
                  'Laos',
                  'Latvia',
                  'Lebanon',
                  'Lesotho',
                  'Liberia',
                  'Libya',
                  'Liechtenstein',
                  'Lithuania',
                  'Luxembourg',
                  'Macedonia',
                  'Madagascar',
                  'Malawi',
                  'Malaysia',
                  'Maldives',
                  'Mali',
                  'Malta',
                  'Marshall Islands',
                  'Mauritania',
                  'Mauritius',
                  'Mexico',
                  'Micronesia',
                  'Moldova',
                  'Monaco',
                  'Mongolia',
                  'Montenegro',
                  'Morocco',
                  'Mozambique',
                  'Myanmar, Burma',
                  'Namibia',
                  'Nauru',
                  'Nepal',
                  'Netherlands',
                  'New Zealand',
                  'Nicaragua',
                  'Niger',
                  'Nigeria',
                  'Norway',
                  'Oman',
                  'Pakistan',
                  'Palau',
                  'Panama',
                  'Papua New Guinea',
                  'Paraguay',
                  'Peru',
                  'Philippines',
                  'Poland',
                  'Portugal',
                  'Qatar',
                  'Romania',
                  'Russian Federation',
                  'Rwanda',
                  'St Kitts & Nevis',
                  'St Lucia',
                  'Saint Vincent & the Grenadines',
                  'Samoa',
                  'San Marino',
                  'Sao Tome & Principe',
                  'Saudi Arabia',
                  'Senegal',
                  'Serbia',
                  'Seychelles',
                  'Sierra Leone',
                  'Singapore',
                  'Slovakia',
                  'Slovenia',
                  'Solomon Islands',
                  'Somalia',
                  'South Africa',
                  'South Sudan',
                  'Spain',
                  'Sri Lanka',
                  'Sudan',
                  'Suriname',
                  'Swaziland',
                  'Sweden',
                  'Switzerland',
                  'Syria',
                  'Taiwan',
                  'Tajikistan',
                  'Tanzania',
                  'Thailand',
                  'Togo',
                  'Tonga',
                  'Trinidad & Tobago',
                  'Tunisia',
                  'Turkey',
                  'Turkmenistan',
                  'Tuvalu',
                  'Uganda',
                  'Ukraine',
                  'United Arab Emirates',
                  'United Kingdom',
                  'United States',
                  'Uruguay',
                  'Uzbekistan',
                  'Vanuatu',
                  'Vatican City',
                  'Venezuela',
                  'Vietnam',
                  'Yemen',
                  'Zambia',
                  'Zimbabwe']
        for i in enumerate(paises):
                self.country.addItem("")
        self.verticalLayout_31.addWidget(self.country, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.horizontalLayout_12.addWidget(self.fr_country)
        self.verticalLayout_32.addWidget(self.second_data, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.fr_medidas_simples = QtWidgets.QFrame(parent=self.data_personal)
        self.fr_medidas_simples.setMinimumSize(QtCore.QSize(900, 140))
        self.fr_medidas_simples.setMaximumSize(QtCore.QSize(900, 170))
        self.fr_medidas_simples.setStyleSheet("")
        self.fr_medidas_simples.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_medidas_simples.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_medidas_simples.setObjectName("fr_medidas_simples")
        self.horizontalLayout_27 = QtWidgets.QHBoxLayout(self.fr_medidas_simples)
        self.horizontalLayout_27.setObjectName("horizontalLayout_27")
        self.data_deporte = QtWidgets.QFrame(parent=self.fr_medidas_simples)
        self.data_deporte.setMinimumSize(QtCore.QSize(263, 140))
        self.data_deporte.setMaximumSize(QtCore.QSize(263, 140))
        self.data_deporte.setStyleSheet("background-color: white;")
        self.data_deporte.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.data_deporte.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.data_deporte.setObjectName("data_deporte")
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout(self.data_deporte)
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.fr_act_deporte = QtWidgets.QFrame(parent=self.data_deporte)
        self.fr_act_deporte.setMinimumSize(QtCore.QSize(230, 100))
        self.fr_act_deporte.setMaximumSize(QtCore.QSize(230, 100))
        self.fr_act_deporte.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_act_deporte.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_act_deporte.setObjectName("fr_act_deporte")
        self.verticalLayout_42 = QtWidgets.QVBoxLayout(self.fr_act_deporte)
        self.verticalLayout_42.setObjectName("verticalLayout_42")
        self.lbl_act_deporte = QtWidgets.QLabel(parent=self.fr_act_deporte)
        self.lbl_act_deporte.setMinimumSize(QtCore.QSize(200, 30))
        self.lbl_act_deporte.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(12)
        self.lbl_act_deporte.setFont(font)
        self.lbl_act_deporte.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_act_deporte.setObjectName("lbl_act_deporte")
        self.verticalLayout_42.addWidget(self.lbl_act_deporte, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.act_deporte = QtWidgets.QLineEdit(parent=self.fr_act_deporte)
        self.act_deporte.setMinimumSize(QtCore.QSize(180, 22))
        self.act_deporte.setMaximumSize(QtCore.QSize(180, 22))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(11)
        self.act_deporte.setFont(font)
        self.act_deporte.setObjectName("act_deporte")
        self.verticalLayout_42.addWidget(self.act_deporte, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.horizontalLayout_11.addWidget(self.fr_act_deporte)
        self.horizontalLayout_27.addWidget(self.data_deporte)
        self.verticalLayout_32.addWidget(self.fr_medidas_simples, 0, QtCore.Qt.AlignmentFlag.AlignHCenter|QtCore.Qt.AlignmentFlag.AlignTop)
        self.fr_btn_s1 = QtWidgets.QFrame(parent=self.data_personal)
        self.fr_btn_s1.setMaximumSize(QtCore.QSize(16777215, 80))
        self.fr_btn_s1.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_btn_s1.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_btn_s1.setObjectName("fr_btn_s1")
        self.verticalLayout_27 = QtWidgets.QVBoxLayout(self.fr_btn_s1)
        self.verticalLayout_27.setObjectName("verticalLayout_27")
        self.btn_sigR1 = QtWidgets.QPushButton(parent=self.fr_btn_s1)
        self.btn_sigR1.setMinimumSize(QtCore.QSize(150, 50))
        self.btn_sigR1.setMaximumSize(QtCore.QSize(150, 50))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(13)
        self.btn_sigR1.setFont(font)
        self.btn_sigR1.setStyleSheet("QPushButton {\n"
"background-color: rgb(0, 0, 61);\n"
"color: rgb(255, 255, 255);\n"
"border: 1px solid white;\n"
"border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"background-color: rgb(0, 0, 31);\n"
"color: white;\n"
"}")
        self.btn_sigR1.setObjectName("btn_sigR1")
        self.verticalLayout_27.addWidget(self.btn_sigR1)
        self.verticalLayout_32.addWidget(self.fr_btn_s1, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.ingresar_patient.addWidget(self.data_personal)
        self.Mediciones = QtWidgets.QWidget()
        self.Mediciones.setObjectName("Mediciones")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.Mediciones)
        self.verticalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_8.setSpacing(0)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.scroll_medidas = QtWidgets.QScrollArea(parent=self.Mediciones)
        self.scroll_medidas.setStyleSheet("QScrollArea {border: 0px solid;}")
        self.scroll_medidas.setWidgetResizable(True)
        self.scroll_medidas.setObjectName("scroll_medidas")
        self.scrollArea_medidas = QtWidgets.QWidget()
        self.scrollArea_medidas.setGeometry(QtCore.QRect(0, 0, 1318, 1018))
        self.scrollArea_medidas.setObjectName("scrollArea_medidas")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.scrollArea_medidas)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.grid_content = QtWidgets.QFrame(parent=self.scrollArea_medidas)
        self.grid_content.setMinimumSize(QtCore.QSize(1300, 1000))
        self.grid_content.setStyleSheet("QTableWidget {\n"
"background-color: rgb(255, 255, 255);\n"
"}")
        self.grid_content.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.grid_content.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.grid_content.setObjectName("grid_content")
        self.gridLayout = QtWidgets.QGridLayout(self.grid_content)
        self.gridLayout.setObjectName("gridLayout")
        self.table_medidas = QtWidgets.QTableWidget(parent=self.grid_content)
        self.table_medidas.setMinimumSize(QtCore.QSize(0, 180))
        self.table_medidas.setMaximumSize(QtCore.QSize(16777215, 180))
        self.table_medidas.setObjectName("table_medidas")
        self.table_medidas.setColumnCount(5)
        self.table_medidas.setRowCount(4)
        item = QtWidgets.QTableWidgetItem()
        self.table_medidas.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_medidas.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_medidas.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_medidas.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_medidas.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_medidas.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_medidas.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_medidas.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_medidas.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_medidas.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_medidas.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_medidas.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_medidas.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_medidas.setItem(0, 4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 31))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_medidas.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_medidas.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_medidas.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_medidas.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_medidas.setItem(1, 4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 31))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_medidas.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_medidas.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_medidas.setItem(2, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_medidas.setItem(2, 3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_medidas.setItem(2, 4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 31))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_medidas.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_medidas.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_medidas.setItem(3, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_medidas.setItem(3, 3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_medidas.setItem(3, 4, item)
        self.table_medidas.horizontalHeader().setVisible(False)
        self.table_medidas.horizontalHeader().setDefaultSectionSize(127)
        self.table_medidas.horizontalHeader().setHighlightSections(True)
        self.table_medidas.verticalHeader().setVisible(False)
        self.table_medidas.verticalHeader().setDefaultSectionSize(30)
        self.table_medidas.verticalHeader().setHighlightSections(True)
        self.table_medidas.verticalHeader().setMinimumSectionSize(0)
        self.table_medidas.verticalHeader().setStretchLastSection(False)
        self.gridLayout.addWidget(self.table_medidas, 2, 0, 1, 1)
        self.lbl_pliegues_cut = QtWidgets.QLabel(parent=self.grid_content)
        self.lbl_pliegues_cut.setMinimumSize(QtCore.QSize(250, 80))
        self.lbl_pliegues_cut.setMaximumSize(QtCore.QSize(250, 80))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(16)
        font.setBold(True)
        self.lbl_pliegues_cut.setFont(font)
        self.lbl_pliegues_cut.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_pliegues_cut.setObjectName("lbl_pliegues_cut")
        self.gridLayout.addWidget(self.lbl_pliegues_cut, 1, 1, 1, 1, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.data_title_patient = QtWidgets.QFrame(parent=self.grid_content)
        self.data_title_patient.setMinimumSize(QtCore.QSize(700, 150))
        self.data_title_patient.setMaximumSize(QtCore.QSize(700, 150))
        self.data_title_patient.setStyleSheet("#data_title_patient {\n"
"border: 1px solid;\n"
"border-radius: 2px;\n"
"border-color: rgb(0, 0, 61);\n"
"}\n"
"\n"
"QFrame {\n"
"background-color: rgb(221, 226, 249);\n"
"}")
        self.data_title_patient.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.data_title_patient.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.data_title_patient.setObjectName("data_title_patient")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.data_title_patient)
        self.verticalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_10.setSpacing(0)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.fr_photo_patient = QtWidgets.QFrame(parent=self.data_title_patient)
        self.fr_photo_patient.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_photo_patient.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_photo_patient.setObjectName("fr_photo_patient")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.fr_photo_patient)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.photo_patient = QtWidgets.QLabel(parent=self.fr_photo_patient)
        self.photo_patient.setMinimumSize(QtCore.QSize(60, 60))
        self.photo_patient.setMaximumSize(QtCore.QSize(60, 60))
        self.photo_patient.setText("")
        self.photo_patient.setPixmap(QtGui.QPixmap("images/foto-p.png"))
        self.photo_patient.setScaledContents(True)
        self.photo_patient.setObjectName("photo_patient")
        self.horizontalLayout_2.addWidget(self.photo_patient, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.verticalLayout_10.addWidget(self.fr_photo_patient)
        self.fr_data = QtWidgets.QFrame(parent=self.data_title_patient)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.fr_data.setFont(font)
        self.fr_data.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_data.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_data.setObjectName("fr_data")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.fr_data)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.lbl_fecha = QtWidgets.QLabel(parent=self.fr_data)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(False)
        self.lbl_fecha.setFont(font)
        self.lbl_fecha.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_fecha.setObjectName("lbl_fecha")
        self.horizontalLayout_3.addWidget(self.lbl_fecha)
        self.lbl_name_patient_medidas = QtWidgets.QLabel(parent=self.fr_data)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        self.lbl_name_patient_medidas.setFont(font)
        self.lbl_name_patient_medidas.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_name_patient_medidas.setObjectName("lbl_name_patient_medidas")
        self.horizontalLayout_3.addWidget(self.lbl_name_patient_medidas)
        self.lbl_hora = QtWidgets.QLabel(parent=self.fr_data)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        self.lbl_hora.setFont(font)
        self.lbl_hora.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_hora.setObjectName("lbl_hora")
        self.horizontalLayout_3.addWidget(self.lbl_hora)
        self.verticalLayout_10.addWidget(self.fr_data)
        self.gridLayout.addWidget(self.data_title_patient, 0, 0, 1, 2, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.table_pliegues_cut = QtWidgets.QTableWidget(parent=self.grid_content)
        self.table_pliegues_cut.setMinimumSize(QtCore.QSize(0, 180))
        self.table_pliegues_cut.setMaximumSize(QtCore.QSize(16777215, 180))
        self.table_pliegues_cut.setObjectName("table_pliegues_cut")
        self.table_pliegues_cut.setColumnCount(5)
        self.table_pliegues_cut.setRowCount(5)
        item = QtWidgets.QTableWidgetItem()
        self.table_pliegues_cut.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_pliegues_cut.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_pliegues_cut.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_pliegues_cut.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_pliegues_cut.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_pliegues_cut.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_pliegues_cut.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_pliegues_cut.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_pliegues_cut.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_pliegues_cut.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_pliegues_cut.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_pliegues_cut.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_pliegues_cut.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_pliegues_cut.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_pliegues_cut.setItem(0, 4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 31))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_pliegues_cut.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_pliegues_cut.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_pliegues_cut.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_pliegues_cut.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_pliegues_cut.setItem(1, 4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 31))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_pliegues_cut.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_pliegues_cut.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_pliegues_cut.setItem(2, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_pliegues_cut.setItem(2, 3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_pliegues_cut.setItem(2, 4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 31))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_pliegues_cut.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_pliegues_cut.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_pliegues_cut.setItem(3, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_pliegues_cut.setItem(3, 3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_pliegues_cut.setItem(3, 4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 31))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_pliegues_cut.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_pliegues_cut.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_pliegues_cut.setItem(4, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_pliegues_cut.setItem(4, 3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_pliegues_cut.setItem(4, 4, item)
        self.table_pliegues_cut.horizontalHeader().setVisible(False)
        self.table_pliegues_cut.horizontalHeader().setDefaultSectionSize(127)
        self.table_pliegues_cut.verticalHeader().setVisible(False)
        self.table_pliegues_cut.verticalHeader().setDefaultSectionSize(30)
        self.table_pliegues_cut.verticalHeader().setHighlightSections(True)
        self.table_pliegues_cut.verticalHeader().setMinimumSectionSize(0)
        self.table_pliegues_cut.verticalHeader().setStretchLastSection(False)
        self.gridLayout.addWidget(self.table_pliegues_cut, 2, 1, 1, 1)
        self.table_perife_circun = QtWidgets.QTableWidget(parent=self.grid_content)
        self.table_perife_circun.setMinimumSize(QtCore.QSize(852, 212))
        self.table_perife_circun.setMaximumSize(QtCore.QSize(852, 212))
        self.table_perife_circun.setRowCount(7)
        self.table_perife_circun.setColumnCount(5)
        self.table_perife_circun.setObjectName("table_perife_circun")
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 61))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(0, 4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 31))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_perife_circun.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_perife_circun.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(1, 4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 31))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_perife_circun.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_perife_circun.setItem(2, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(2, 3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(2, 4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 31))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_perife_circun.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_perife_circun.setItem(3, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(3, 3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(3, 4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 31))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_perife_circun.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_perife_circun.setItem(4, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(4, 3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(4, 4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 31))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_perife_circun.setItem(5, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_perife_circun.setItem(5, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(5, 3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(5, 4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 31))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setBackground(brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.BrushStyle.SolidPattern)
        item.setForeground(brush)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(6, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_perife_circun.setItem(6, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        self.table_perife_circun.setItem(6, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(6, 3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        item.setFont(font)
        item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        self.table_perife_circun.setItem(6, 4, item)
        self.table_perife_circun.horizontalHeader().setVisible(False)
        self.table_perife_circun.horizontalHeader().setDefaultSectionSize(170)
        self.table_perife_circun.verticalHeader().setVisible(False)
        self.gridLayout.addWidget(self.table_perife_circun, 5, 0, 1, 2, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.lbl_medidas_simples = QtWidgets.QLabel(parent=self.grid_content)
        self.lbl_medidas_simples.setMinimumSize(QtCore.QSize(250, 80))
        self.lbl_medidas_simples.setMaximumSize(QtCore.QSize(250, 80))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(16)
        font.setBold(True)
        self.lbl_medidas_simples.setFont(font)
        self.lbl_medidas_simples.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_medidas_simples.setObjectName("lbl_medidas_simples")
        self.gridLayout.addWidget(self.lbl_medidas_simples, 1, 0, 1, 1, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.lbl_perife_circun = QtWidgets.QLabel(parent=self.grid_content)
        self.lbl_perife_circun.setMinimumSize(QtCore.QSize(320, 80))
        self.lbl_perife_circun.setMaximumSize(QtCore.QSize(320, 80))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(16)
        font.setBold(True)
        self.lbl_perife_circun.setFont(font)
        self.lbl_perife_circun.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_perife_circun.setObjectName("lbl_perife_circun")
        self.gridLayout.addWidget(self.lbl_perife_circun, 4, 0, 1, 2, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.fr_guardar_medidas = QtWidgets.QFrame(parent=self.grid_content)
        self.fr_guardar_medidas.setMinimumSize(QtCore.QSize(0, 80))
        self.fr_guardar_medidas.setMaximumSize(QtCore.QSize(16777215, 80))
        self.fr_guardar_medidas.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_guardar_medidas.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_guardar_medidas.setObjectName("fr_guardar_medidas")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.fr_guardar_medidas)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.btn_guardar_medidas = QtWidgets.QPushButton(parent=self.fr_guardar_medidas)
        self.btn_guardar_medidas.setMinimumSize(QtCore.QSize(150, 50))
        self.btn_guardar_medidas.setMaximumSize(QtCore.QSize(150, 50))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(13)
        self.btn_guardar_medidas.setFont(font)
        self.btn_guardar_medidas.setStyleSheet("QPushButton {\n"
"background-color: rgb(0, 0, 61);\n"
"color: rgb(255, 255, 255);\n"
"border: 1px solid white;\n"
"border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"background-color: rgb(0, 0, 31);\n"
"color: white;\n"
"}")
        self.btn_guardar_medidas.setObjectName("btn_guardar_medidas")
        self.horizontalLayout_4.addWidget(self.btn_guardar_medidas)
        self.gridLayout.addWidget(self.fr_guardar_medidas, 8, 0, 1, 2)
        self.verticalLayout_9.addWidget(self.grid_content)
        self.scroll_medidas.setWidget(self.scrollArea_medidas)
        self.verticalLayout_8.addWidget(self.scroll_medidas)
        self.ingresar_patient.addWidget(self.Mediciones)
        self.Salida = QtWidgets.QWidget()
        self.Salida.setObjectName("Salida")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.Salida)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.fr_salida = QtWidgets.QFrame(parent=self.Salida)
        self.fr_salida.setMinimumSize(QtCore.QSize(0, 0))
        self.fr_salida.setMaximumSize(QtCore.QSize(16777215, 780))
        self.fr_salida.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_salida.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_salida.setObjectName("fr_salida")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.fr_salida)
        self.verticalLayout_12.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_12.setSpacing(0)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.fr_datos_patient_s = QtWidgets.QFrame(parent=self.fr_salida)
        self.fr_datos_patient_s.setMinimumSize(QtCore.QSize(0, 213))
        self.fr_datos_patient_s.setMaximumSize(QtCore.QSize(16777215, 213))
        self.fr_datos_patient_s.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_datos_patient_s.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_datos_patient_s.setObjectName("fr_datos_patient_s")
        self.horizontalLayout_16 = QtWidgets.QHBoxLayout(self.fr_datos_patient_s)
        self.horizontalLayout_16.setObjectName("horizontalLayout_16")
        self.hora_s = QtWidgets.QLabel(parent=self.fr_datos_patient_s)
        self.hora_s.setMinimumSize(QtCore.QSize(140, 60))
        self.hora_s.setMaximumSize(QtCore.QSize(140, 60))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(10)
        self.hora_s.setFont(font)
        self.hora_s.setStyleSheet("background-color: white;\n"
"color: rgb(0, 0, 31);\n"
"border: 3px solid;\n"
"border-radius: 5px;\n"
"border-color: rgb(0, 0, 31);\n"
"")
        self.hora_s.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.hora_s.setObjectName("hora_s")
        self.horizontalLayout_16.addWidget(self.hora_s)
        self.data_title_patient_s = QtWidgets.QFrame(parent=self.fr_datos_patient_s)
        self.data_title_patient_s.setMinimumSize(QtCore.QSize(890, 200))
        self.data_title_patient_s.setMaximumSize(QtCore.QSize(890, 200))
        self.data_title_patient_s.setStyleSheet("#data_title_patient {\n"
"border: 1px solid;\n"
"border-radius: 5px;\n"
"border-color: rgb(0, 0, 61);\n"
"}\n"
"\n"
"QFrame {\n"
"background-color: rgb(221, 226, 249);\n"
"}")
        self.data_title_patient_s.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.data_title_patient_s.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.data_title_patient_s.setObjectName("data_title_patient_s")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.data_title_patient_s)
        self.verticalLayout_13.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_13.setSpacing(0)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.fr_photo_patient_s = QtWidgets.QFrame(parent=self.data_title_patient_s)
        self.fr_photo_patient_s.setMaximumSize(QtCore.QSize(16777215, 80))
        self.fr_photo_patient_s.setStyleSheet("background-color: rgb(0, 0, 31)")
        self.fr_photo_patient_s.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_photo_patient_s.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_photo_patient_s.setObjectName("fr_photo_patient_s")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.fr_photo_patient_s)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.photo_patient_s = QtWidgets.QLabel(parent=self.fr_photo_patient_s)
        self.photo_patient_s.setMinimumSize(QtCore.QSize(60, 60))
        self.photo_patient_s.setMaximumSize(QtCore.QSize(60, 60))
        self.photo_patient_s.setStyleSheet("border: 2px solid;\n"
"border-color: white;")
        self.photo_patient_s.setText("")
        self.photo_patient_s.setPixmap(QtGui.QPixmap("images/foto-p.png"))
        self.photo_patient_s.setScaledContents(True)
        self.photo_patient_s.setObjectName("photo_patient_s")
        self.horizontalLayout_7.addWidget(self.photo_patient_s, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.verticalLayout_13.addWidget(self.fr_photo_patient_s)
        self.fr_data_patient_s = QtWidgets.QFrame(parent=self.data_title_patient_s)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.fr_data_patient_s.setFont(font)
        self.fr_data_patient_s.setStyleSheet("#fr_data_patient_s {\n"
"border: 3px solid;\n"
"border-radius: 5px;\n"
"border-color: rgb(0, 0, 31);\n"
"}\n"
"\n"
"QFrame {\n"
"background-color: white;\n"
"}\n"
"\n"
"QLabel {\n"
"background-color: white;\n"
"color: rgb(0, 0, 31);\n"
"}")
        self.fr_data_patient_s.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_data_patient_s.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_data_patient_s.setObjectName("fr_data_patient_s")
        self.verticalLayout_14 = QtWidgets.QVBoxLayout(self.fr_data_patient_s)
        self.verticalLayout_14.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_14.setSpacing(0)
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.fr_name_s = QtWidgets.QFrame(parent=self.fr_data_patient_s)
        self.fr_name_s.setMinimumSize(QtCore.QSize(0, 40))
        self.fr_name_s.setMaximumSize(QtCore.QSize(16777215, 40))
        self.fr_name_s.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_name_s.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_name_s.setObjectName("fr_name_s")
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout(self.fr_name_s)
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.nombrec_s = QtWidgets.QLabel(parent=self.fr_name_s)
        self.nombrec_s.setMinimumSize(QtCore.QSize(200, 20))
        self.nombrec_s.setMaximumSize(QtCore.QSize(200, 20))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(10)
        self.nombrec_s.setFont(font)
        self.nombrec_s.setStyleSheet("border-bottom: 2px solid;\n"
"border-radius: 30px;\n"
"border-color: rgb(0, 0, 31);")
        self.nombrec_s.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.nombrec_s.setObjectName("nombrec_s")
        self.horizontalLayout_14.addWidget(self.nombrec_s)
        self.verticalLayout_14.addWidget(self.fr_name_s)
        self.fr_datapatient_s = QtWidgets.QFrame(parent=self.fr_data_patient_s)
        self.fr_datapatient_s.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_datapatient_s.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_datapatient_s.setObjectName("fr_datapatient_s")
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout(self.fr_datapatient_s)
        self.horizontalLayout_15.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_15.setSpacing(0)
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.fr_datap_s1 = QtWidgets.QFrame(parent=self.fr_datapatient_s)
        self.fr_datap_s1.setMinimumSize(QtCore.QSize(210, 0))
        self.fr_datap_s1.setMaximumSize(QtCore.QSize(210, 16777215))
        self.fr_datap_s1.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_datap_s1.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_datap_s1.setObjectName("fr_datap_s1")
        self.verticalLayout_15 = QtWidgets.QVBoxLayout(self.fr_datap_s1)
        self.verticalLayout_15.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_15.setSpacing(0)
        self.verticalLayout_15.setObjectName("verticalLayout_15")
        self.documento_s = QtWidgets.QLabel(parent=self.fr_datap_s1)
        self.documento_s.setMinimumSize(QtCore.QSize(150, 20))
        self.documento_s.setMaximumSize(QtCore.QSize(16777215, 20))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(10)
        self.documento_s.setFont(font)
        self.documento_s.setStyleSheet("")
        self.documento_s.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.documento_s.setObjectName("documento_s")
        self.verticalLayout_15.addWidget(self.documento_s, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.tipo_patient_s = QtWidgets.QLabel(parent=self.fr_datap_s1)
        self.tipo_patient_s.setMinimumSize(QtCore.QSize(150, 20))
        self.tipo_patient_s.setMaximumSize(QtCore.QSize(16777215, 20))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(10)
        self.tipo_patient_s.setFont(font)
        self.tipo_patient_s.setStyleSheet("")
        self.tipo_patient_s.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.tipo_patient_s.setObjectName("tipo_patient_s")
        self.verticalLayout_15.addWidget(self.tipo_patient_s, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.horizontalLayout_15.addWidget(self.fr_datap_s1)
        self.fr_datap_s2 = QtWidgets.QFrame(parent=self.fr_datapatient_s)
        self.fr_datap_s2.setMinimumSize(QtCore.QSize(210, 0))
        self.fr_datap_s2.setMaximumSize(QtCore.QSize(210, 16777215))
        self.fr_datap_s2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_datap_s2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_datap_s2.setObjectName("fr_datap_s2")
        self.verticalLayout_16 = QtWidgets.QVBoxLayout(self.fr_datap_s2)
        self.verticalLayout_16.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_16.setSpacing(0)
        self.verticalLayout_16.setObjectName("verticalLayout_16")
        self.sexo_s = QtWidgets.QLabel(parent=self.fr_datap_s2)
        self.sexo_s.setMinimumSize(QtCore.QSize(150, 20))
        self.sexo_s.setMaximumSize(QtCore.QSize(16777215, 20))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(10)
        self.sexo_s.setFont(font)
        self.sexo_s.setStyleSheet("")
        self.sexo_s.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.sexo_s.setObjectName("sexo_s")
        self.verticalLayout_16.addWidget(self.sexo_s, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.pais_s = QtWidgets.QLabel(parent=self.fr_datap_s2)
        self.pais_s.setMinimumSize(QtCore.QSize(150, 20))
        self.pais_s.setMaximumSize(QtCore.QSize(16777215, 20))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(10)
        self.pais_s.setFont(font)
        self.pais_s.setStyleSheet("")
        self.pais_s.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.pais_s.setObjectName("pais_s")
        self.verticalLayout_16.addWidget(self.pais_s, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.horizontalLayout_15.addWidget(self.fr_datap_s2)
        self.fr_datap_s3 = QtWidgets.QFrame(parent=self.fr_datapatient_s)
        self.fr_datap_s3.setMinimumSize(QtCore.QSize(210, 0))
        self.fr_datap_s3.setMaximumSize(QtCore.QSize(210, 16777215))
        self.fr_datap_s3.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_datap_s3.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_datap_s3.setObjectName("fr_datap_s3")
        self.verticalLayout_36 = QtWidgets.QVBoxLayout(self.fr_datap_s3)
        self.verticalLayout_36.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_36.setSpacing(0)
        self.verticalLayout_36.setObjectName("verticalLayout_36")
        self.telf_s = QtWidgets.QLabel(parent=self.fr_datap_s3)
        self.telf_s.setMinimumSize(QtCore.QSize(150, 20))
        self.telf_s.setMaximumSize(QtCore.QSize(16777215, 20))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(10)
        self.telf_s.setFont(font)
        self.telf_s.setStyleSheet("")
        self.telf_s.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.telf_s.setObjectName("telf_s")
        self.verticalLayout_36.addWidget(self.telf_s, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.Act_fisica_s = QtWidgets.QLabel(parent=self.fr_datap_s3)
        self.Act_fisica_s.setMinimumSize(QtCore.QSize(150, 20))
        self.Act_fisica_s.setMaximumSize(QtCore.QSize(16777215, 20))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(10)
        self.Act_fisica_s.setFont(font)
        self.Act_fisica_s.setStyleSheet("")
        self.Act_fisica_s.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.Act_fisica_s.setObjectName("Act_fisica_s")
        self.verticalLayout_36.addWidget(self.Act_fisica_s, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.horizontalLayout_15.addWidget(self.fr_datap_s3)
        self.fr_datap_s4 = QtWidgets.QFrame(parent=self.fr_datapatient_s)
        self.fr_datap_s4.setMinimumSize(QtCore.QSize(210, 0))
        self.fr_datap_s4.setMaximumSize(QtCore.QSize(210, 16777215))
        self.fr_datap_s4.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_datap_s4.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_datap_s4.setObjectName("fr_datap_s4")
        self.verticalLayout_37 = QtWidgets.QVBoxLayout(self.fr_datap_s4)
        self.verticalLayout_37.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_37.setSpacing(0)
        self.verticalLayout_37.setObjectName("verticalLayout_37")
        self.fnacimiento_s = QtWidgets.QLabel(parent=self.fr_datap_s4)
        self.fnacimiento_s.setMinimumSize(QtCore.QSize(160, 20))
        self.fnacimiento_s.setMaximumSize(QtCore.QSize(16777215, 20))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(10)
        self.fnacimiento_s.setFont(font)
        self.fnacimiento_s.setStyleSheet("")
        self.fnacimiento_s.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.fnacimiento_s.setObjectName("fnacimiento_s")
        self.verticalLayout_37.addWidget(self.fnacimiento_s)
        self.edad_s = QtWidgets.QLabel(parent=self.fr_datap_s4)
        self.edad_s.setMinimumSize(QtCore.QSize(150, 20))
        self.edad_s.setMaximumSize(QtCore.QSize(16777215, 20))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(10)
        self.edad_s.setFont(font)
        self.edad_s.setStyleSheet("")
        self.edad_s.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.edad_s.setObjectName("edad_s")
        self.verticalLayout_37.addWidget(self.edad_s)
        self.horizontalLayout_15.addWidget(self.fr_datap_s4)
        self.verticalLayout_14.addWidget(self.fr_datapatient_s)
        self.verticalLayout_13.addWidget(self.fr_data_patient_s)
        self.horizontalLayout_16.addWidget(self.data_title_patient_s)
        self.fecha_s = QtWidgets.QLabel(parent=self.fr_datos_patient_s)
        self.fecha_s.setMinimumSize(QtCore.QSize(140, 60))
        self.fecha_s.setMaximumSize(QtCore.QSize(140, 60))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(10)
        self.fecha_s.setFont(font)
        self.fecha_s.setStyleSheet("background-color: white;\n"
"color: rgb(0, 0, 31);\n"
"border: 3px solid;\n"
"border-radius: 5px;\n"
"border-color: rgb(0, 0, 31);\n"
"")
        self.fecha_s.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.fecha_s.setObjectName("fecha_s")
        self.horizontalLayout_16.addWidget(self.fecha_s)
        self.verticalLayout_12.addWidget(self.fr_datos_patient_s, 0, QtCore.Qt.AlignmentFlag.AlignTop)
        self.fr_calculos = QtWidgets.QFrame(parent=self.fr_salida)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fr_calculos.sizePolicy().hasHeightForWidth())
        self.fr_calculos.setSizePolicy(sizePolicy)
        self.fr_calculos.setMinimumSize(QtCore.QSize(0, 380))
        self.fr_calculos.setMaximumSize(QtCore.QSize(16777215, 380))
        self.fr_calculos.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_calculos.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_calculos.setObjectName("fr_calculos")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.fr_calculos)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.fr_seccion_s = QtWidgets.QFrame(parent=self.fr_calculos)
        self.fr_seccion_s.setMinimumSize(QtCore.QSize(1200, 0))
        self.fr_seccion_s.setMaximumSize(QtCore.QSize(1200, 16777215))
        self.fr_seccion_s.setStyleSheet("#fr_seccion_s {\n"
"border: 3px solid;\n"
"border-radius: 5px;\n"
"border-color: rgb(0, 0, 31);\n"
"}\n"
"\n"
"QFrame {\n"
"background-color: white;\n"
"}")
        self.fr_seccion_s.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_seccion_s.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_seccion_s.setObjectName("fr_seccion_s")
        self.verticalLayout_39 = QtWidgets.QVBoxLayout(self.fr_seccion_s)
        self.verticalLayout_39.setContentsMargins(4, 4, 4, 4)
        self.verticalLayout_39.setSpacing(0)
        self.verticalLayout_39.setObjectName("verticalLayout_39")
        self.fr_title_s = QtWidgets.QFrame(parent=self.fr_seccion_s)
        self.fr_title_s.setMinimumSize(QtCore.QSize(0, 40))
        self.fr_title_s.setMaximumSize(QtCore.QSize(16777215, 40))
        self.fr_title_s.setStyleSheet("background-color: rgb(0, 0, 31);\n"
"border-radius: 5px;")
        self.fr_title_s.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_title_s.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_title_s.setObjectName("fr_title_s")
        self.horizontalLayout_17 = QtWidgets.QHBoxLayout(self.fr_title_s)
        self.horizontalLayout_17.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_17.setSpacing(0)
        self.horizontalLayout_17.setObjectName("horizontalLayout_17")
        self.lbl_title_cal_s = QtWidgets.QLabel(parent=self.fr_title_s)
        self.lbl_title_cal_s.setMinimumSize(QtCore.QSize(848, 20))
        self.lbl_title_cal_s.setMaximumSize(QtCore.QSize(848, 16777215))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(14)
        font.setBold(True)
        self.lbl_title_cal_s.setFont(font)
        self.lbl_title_cal_s.setStyleSheet("color: white;")
        self.lbl_title_cal_s.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_title_cal_s.setObjectName("lbl_title_cal_s")
        self.horizontalLayout_17.addWidget(self.lbl_title_cal_s)
        self.verticalLayout_39.addWidget(self.fr_title_s)
        self.fr_content_s = QtWidgets.QFrame(parent=self.fr_seccion_s)
        self.fr_content_s.setStyleSheet("#fr_content_s {\n"
"background-color: rgb(72, 18, 178);\n"
"border-radius: 5px;\n"
"}")
        self.fr_content_s.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_content_s.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_content_s.setObjectName("fr_content_s")
        self.horizontalLayout_18 = QtWidgets.QHBoxLayout(self.fr_content_s)
        self.horizontalLayout_18.setObjectName("horizontalLayout_18")
        self.fr_salida1 = QtWidgets.QFrame(parent=self.fr_content_s)
        self.fr_salida1.setStyleSheet("#fr_salida1 {\n"
"background-color: rgb(0, 0, 61);\n"
"border: 1px solid;\n"
"border-radius: 10px;\n"
"border-color: rgb(0, 0, 31);\n"
"}")
        self.fr_salida1.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_salida1.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_salida1.setObjectName("fr_salida1")
        self.verticalLayout_38 = QtWidgets.QVBoxLayout(self.fr_salida1)
        self.verticalLayout_38.setObjectName("verticalLayout_38")
        self.fr_imc = QtWidgets.QFrame(parent=self.fr_salida1)
        self.fr_imc.setMinimumSize(QtCore.QSize(0, 50))
        self.fr_imc.setMaximumSize(QtCore.QSize(16777215, 50))
        self.fr_imc.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_imc.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_imc.setObjectName("fr_imc")
        self.horizontalLayout_19 = QtWidgets.QHBoxLayout(self.fr_imc)
        self.horizontalLayout_19.setObjectName("horizontalLayout_19")
        self.lbl_icon = QtWidgets.QLabel(parent=self.fr_imc)
        self.lbl_icon.setMinimumSize(QtCore.QSize(25, 25))
        self.lbl_icon.setMaximumSize(QtCore.QSize(25, 25))
        self.lbl_icon.setText("")
        self.lbl_icon.setPixmap(QtGui.QPixmap("icons/icon_lista.png"))
        self.lbl_icon.setScaledContents(True)
        self.lbl_icon.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_icon.setObjectName("lbl_icon")
        self.horizontalLayout_19.addWidget(self.lbl_icon)
        self.lbl_imc = QtWidgets.QLabel(parent=self.fr_imc)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        self.lbl_imc.setFont(font)
        self.lbl_imc.setObjectName("lbl_imc")
        self.horizontalLayout_19.addWidget(self.lbl_imc)
        self.verticalLayout_38.addWidget(self.fr_imc)
        self.fr_icc = QtWidgets.QFrame(parent=self.fr_salida1)
        self.fr_icc.setMinimumSize(QtCore.QSize(0, 50))
        self.fr_icc.setMaximumSize(QtCore.QSize(16777215, 50))
        self.fr_icc.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_icc.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_icc.setObjectName("fr_icc")
        self.horizontalLayout_20 = QtWidgets.QHBoxLayout(self.fr_icc)
        self.horizontalLayout_20.setObjectName("horizontalLayout_20")
        self.lbl_icon_2 = QtWidgets.QLabel(parent=self.fr_icc)
        self.lbl_icon_2.setMinimumSize(QtCore.QSize(25, 25))
        self.lbl_icon_2.setMaximumSize(QtCore.QSize(25, 25))
        self.lbl_icon_2.setText("")
        self.lbl_icon_2.setPixmap(QtGui.QPixmap("icons/icon_lista.png"))
        self.lbl_icon_2.setScaledContents(True)
        self.lbl_icon_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_icon_2.setObjectName("lbl_icon_2")
        self.horizontalLayout_20.addWidget(self.lbl_icon_2)
        self.lbl_icc = QtWidgets.QLabel(parent=self.fr_icc)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        self.lbl_icc.setFont(font)
        self.lbl_icc.setObjectName("lbl_icc")
        self.horizontalLayout_20.addWidget(self.lbl_icc)
        self.verticalLayout_38.addWidget(self.fr_icc)
        self.fr_ice = QtWidgets.QFrame(parent=self.fr_salida1)
        self.fr_ice.setMinimumSize(QtCore.QSize(0, 50))
        self.fr_ice.setMaximumSize(QtCore.QSize(16777215, 50))
        self.fr_ice.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_ice.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_ice.setObjectName("fr_ice")
        self.horizontalLayout_21 = QtWidgets.QHBoxLayout(self.fr_ice)
        self.horizontalLayout_21.setObjectName("horizontalLayout_21")
        self.lbl_icon_3 = QtWidgets.QLabel(parent=self.fr_ice)
        self.lbl_icon_3.setMinimumSize(QtCore.QSize(25, 25))
        self.lbl_icon_3.setMaximumSize(QtCore.QSize(25, 25))
        self.lbl_icon_3.setText("")
        self.lbl_icon_3.setPixmap(QtGui.QPixmap("icons/icon_lista.png"))
        self.lbl_icon_3.setScaledContents(True)
        self.lbl_icon_3.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_icon_3.setObjectName("lbl_icon_3")
        self.horizontalLayout_21.addWidget(self.lbl_icon_3)
        self.lbl_ice = QtWidgets.QLabel(parent=self.fr_ice)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        self.lbl_ice.setFont(font)
        self.lbl_ice.setObjectName("lbl_ice")
        self.horizontalLayout_21.addWidget(self.lbl_ice)
        self.verticalLayout_38.addWidget(self.fr_ice)
        self.fr_porcent_grasa = QtWidgets.QFrame(parent=self.fr_salida1)
        self.fr_porcent_grasa.setMinimumSize(QtCore.QSize(0, 50))
        self.fr_porcent_grasa.setMaximumSize(QtCore.QSize(16777215, 50))
        self.fr_porcent_grasa.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_porcent_grasa.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_porcent_grasa.setObjectName("fr_porcent_grasa")
        self.horizontalLayout_22 = QtWidgets.QHBoxLayout(self.fr_porcent_grasa)
        self.horizontalLayout_22.setObjectName("horizontalLayout_22")
        self.lbl_icon_4 = QtWidgets.QLabel(parent=self.fr_porcent_grasa)
        self.lbl_icon_4.setMinimumSize(QtCore.QSize(25, 25))
        self.lbl_icon_4.setMaximumSize(QtCore.QSize(25, 25))
        self.lbl_icon_4.setText("")
        self.lbl_icon_4.setPixmap(QtGui.QPixmap("icons/icon_lista.png"))
        self.lbl_icon_4.setScaledContents(True)
        self.lbl_icon_4.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_icon_4.setObjectName("lbl_icon_4")
        self.horizontalLayout_22.addWidget(self.lbl_icon_4)
        self.lbl_porcent_grasa = QtWidgets.QLabel(parent=self.fr_porcent_grasa)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        self.lbl_porcent_grasa.setFont(font)
        self.lbl_porcent_grasa.setObjectName("lbl_porcent_grasa")
        self.horizontalLayout_22.addWidget(self.lbl_porcent_grasa)
        self.verticalLayout_38.addWidget(self.fr_porcent_grasa)
        self.horizontalLayout_18.addWidget(self.fr_salida1)
        self.fr_salida2 = QtWidgets.QFrame(parent=self.fr_content_s)
        self.fr_salida2.setStyleSheet("#fr_salida2 {\n"
"background-color: rgb(0, 0, 61);\n"
"border: 1px solid;\n"
"border-radius: 10px;\n"
"border-color: rgb(0, 0, 31);\n"
"}")
        self.fr_salida2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_salida2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_salida2.setObjectName("fr_salida2")
        self.verticalLayout_40 = QtWidgets.QVBoxLayout(self.fr_salida2)
        self.verticalLayout_40.setObjectName("verticalLayout_40")
        self.fr_pde_grasa = QtWidgets.QFrame(parent=self.fr_salida2)
        self.fr_pde_grasa.setMinimumSize(QtCore.QSize(0, 50))
        self.fr_pde_grasa.setMaximumSize(QtCore.QSize(16777215, 50))
        self.fr_pde_grasa.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_pde_grasa.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_pde_grasa.setObjectName("fr_pde_grasa")
        self.horizontalLayout_23 = QtWidgets.QHBoxLayout(self.fr_pde_grasa)
        self.horizontalLayout_23.setObjectName("horizontalLayout_23")
        self.lbl_icon_5 = QtWidgets.QLabel(parent=self.fr_pde_grasa)
        self.lbl_icon_5.setMinimumSize(QtCore.QSize(25, 25))
        self.lbl_icon_5.setMaximumSize(QtCore.QSize(25, 25))
        self.lbl_icon_5.setText("")
        self.lbl_icon_5.setPixmap(QtGui.QPixmap("icons/icon_lista.png"))
        self.lbl_icon_5.setScaledContents(True)
        self.lbl_icon_5.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_icon_5.setObjectName("lbl_icon_5")
        self.horizontalLayout_23.addWidget(self.lbl_icon_5)
        self.lbl_p_degrasa = QtWidgets.QLabel(parent=self.fr_pde_grasa)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        self.lbl_p_degrasa.setFont(font)
        self.lbl_p_degrasa.setObjectName("lbl_p_degrasa")
        self.horizontalLayout_23.addWidget(self.lbl_p_degrasa)
        self.verticalLayout_40.addWidget(self.fr_pde_grasa)
        self.fr_p_degrasa_percentil = QtWidgets.QFrame(parent=self.fr_salida2)
        self.fr_p_degrasa_percentil.setMinimumSize(QtCore.QSize(0, 50))
        self.fr_p_degrasa_percentil.setMaximumSize(QtCore.QSize(16777215, 50))
        self.fr_p_degrasa_percentil.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_p_degrasa_percentil.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_p_degrasa_percentil.setObjectName("fr_p_degrasa_percentil")
        self.horizontalLayout_24 = QtWidgets.QHBoxLayout(self.fr_p_degrasa_percentil)
        self.horizontalLayout_24.setObjectName("horizontalLayout_24")
        self.lbl_icon_6 = QtWidgets.QLabel(parent=self.fr_p_degrasa_percentil)
        self.lbl_icon_6.setMinimumSize(QtCore.QSize(25, 25))
        self.lbl_icon_6.setMaximumSize(QtCore.QSize(25, 25))
        self.lbl_icon_6.setText("")
        self.lbl_icon_6.setPixmap(QtGui.QPixmap("icons/icon_lista.png"))
        self.lbl_icon_6.setScaledContents(True)
        self.lbl_icon_6.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_icon_6.setObjectName("lbl_icon_6")
        self.horizontalLayout_24.addWidget(self.lbl_icon_6)
        self.lbl_p_degrasa_percentil = QtWidgets.QLabel(parent=self.fr_p_degrasa_percentil)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        self.lbl_p_degrasa_percentil.setFont(font)
        self.lbl_p_degrasa_percentil.setObjectName("lbl_p_degrasa_percentil")
        self.horizontalLayout_24.addWidget(self.lbl_p_degrasa_percentil)
        self.verticalLayout_40.addWidget(self.fr_p_degrasa_percentil)
        self.fr_indice_mlg = QtWidgets.QFrame(parent=self.fr_salida2)
        self.fr_indice_mlg.setMinimumSize(QtCore.QSize(0, 50))
        self.fr_indice_mlg.setMaximumSize(QtCore.QSize(16777215, 50))
        self.fr_indice_mlg.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_indice_mlg.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_indice_mlg.setObjectName("fr_indice_mlg")
        self.horizontalLayout_25 = QtWidgets.QHBoxLayout(self.fr_indice_mlg)
        self.horizontalLayout_25.setObjectName("horizontalLayout_25")
        self.lbl_icon_7 = QtWidgets.QLabel(parent=self.fr_indice_mlg)
        self.lbl_icon_7.setMinimumSize(QtCore.QSize(25, 25))
        self.lbl_icon_7.setMaximumSize(QtCore.QSize(25, 25))
        self.lbl_icon_7.setText("")
        self.lbl_icon_7.setPixmap(QtGui.QPixmap("icons/icon_lista.png"))
        self.lbl_icon_7.setScaledContents(True)
        self.lbl_icon_7.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_icon_7.setObjectName("lbl_icon_7")
        self.horizontalLayout_25.addWidget(self.lbl_icon_7)
        self.lbl_indice_mlg = QtWidgets.QLabel(parent=self.fr_indice_mlg)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        self.lbl_indice_mlg.setFont(font)
        self.lbl_indice_mlg.setObjectName("lbl_indice_mlg")
        self.horizontalLayout_25.addWidget(self.lbl_indice_mlg)
        self.verticalLayout_40.addWidget(self.fr_indice_mlg)
        self.fr_camb = QtWidgets.QFrame(parent=self.fr_salida2)
        self.fr_camb.setMinimumSize(QtCore.QSize(0, 50))
        self.fr_camb.setMaximumSize(QtCore.QSize(16777215, 50))
        self.fr_camb.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_camb.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_camb.setObjectName("fr_camb")
        self.horizontalLayout_26 = QtWidgets.QHBoxLayout(self.fr_camb)
        self.horizontalLayout_26.setObjectName("horizontalLayout_26")
        self.lbl_icon_8 = QtWidgets.QLabel(parent=self.fr_camb)
        self.lbl_icon_8.setMinimumSize(QtCore.QSize(25, 25))
        self.lbl_icon_8.setMaximumSize(QtCore.QSize(25, 25))
        self.lbl_icon_8.setText("")
        self.lbl_icon_8.setPixmap(QtGui.QPixmap("icons/icon_lista.png"))
        self.lbl_icon_8.setScaledContents(True)
        self.lbl_icon_8.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_icon_8.setObjectName("lbl_icon_8")
        self.horizontalLayout_26.addWidget(self.lbl_icon_8)
        self.lbl_camb = QtWidgets.QLabel(parent=self.fr_camb)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        self.lbl_camb.setFont(font)
        self.lbl_camb.setObjectName("lbl_camb")
        self.horizontalLayout_26.addWidget(self.lbl_camb)
        self.verticalLayout_40.addWidget(self.fr_camb)
        self.horizontalLayout_18.addWidget(self.fr_salida2)
        self.fr_salida3 = QtWidgets.QFrame(parent=self.fr_content_s)
        self.fr_salida3.setStyleSheet("#fr_salida3 {\n"
"background-color: rgb(0, 0, 61);\n"
"border: 1px solid;\n"
"border-radius: 10px;\n"
"border-color: rgb(0, 0, 31);\n"
"}")
        self.fr_salida3.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_salida3.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_salida3.setObjectName("fr_salida3")
        self.verticalLayout_41 = QtWidgets.QVBoxLayout(self.fr_salida3)
        self.verticalLayout_41.setObjectName("verticalLayout_41")
        self.fr_iamb = QtWidgets.QFrame(parent=self.fr_salida3)
        self.fr_iamb.setMinimumSize(QtCore.QSize(0, 70))
        self.fr_iamb.setMaximumSize(QtCore.QSize(16777215, 70))
        self.fr_iamb.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_iamb.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_iamb.setObjectName("fr_iamb")
        self.horizontalLayout_28 = QtWidgets.QHBoxLayout(self.fr_iamb)
        self.horizontalLayout_28.setObjectName("horizontalLayout_28")
        self.lbl_icon_9 = QtWidgets.QLabel(parent=self.fr_iamb)
        self.lbl_icon_9.setMinimumSize(QtCore.QSize(25, 25))
        self.lbl_icon_9.setMaximumSize(QtCore.QSize(25, 25))
        self.lbl_icon_9.setText("")
        self.lbl_icon_9.setPixmap(QtGui.QPixmap("icons/icon_lista.png"))
        self.lbl_icon_9.setScaledContents(True)
        self.lbl_icon_9.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_icon_9.setObjectName("lbl_icon_9")
        self.horizontalLayout_28.addWidget(self.lbl_icon_9)
        self.lbl_iamb = QtWidgets.QLabel(parent=self.fr_iamb)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        self.lbl_iamb.setFont(font)
        self.lbl_iamb.setObjectName("lbl_iamb")
        self.horizontalLayout_28.addWidget(self.lbl_iamb)
        self.verticalLayout_41.addWidget(self.fr_iamb)
        self.fr_complex = QtWidgets.QFrame(parent=self.fr_salida3)
        self.fr_complex.setMinimumSize(QtCore.QSize(0, 70))
        self.fr_complex.setMaximumSize(QtCore.QSize(16777215, 70))
        self.fr_complex.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_complex.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_complex.setObjectName("fr_complex")
        self.horizontalLayout_29 = QtWidgets.QHBoxLayout(self.fr_complex)
        self.horizontalLayout_29.setObjectName("horizontalLayout_29")
        self.lbl_icon_10 = QtWidgets.QLabel(parent=self.fr_complex)
        self.lbl_icon_10.setMinimumSize(QtCore.QSize(25, 25))
        self.lbl_icon_10.setMaximumSize(QtCore.QSize(25, 25))
        self.lbl_icon_10.setText("")
        self.lbl_icon_10.setPixmap(QtGui.QPixmap("icons/icon_lista.png"))
        self.lbl_icon_10.setScaledContents(True)
        self.lbl_icon_10.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_icon_10.setObjectName("lbl_icon_10")
        self.horizontalLayout_29.addWidget(self.lbl_icon_10)
        self.lbl_complex = QtWidgets.QLabel(parent=self.fr_complex)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        self.lbl_complex.setFont(font)
        self.lbl_complex.setObjectName("lbl_complex")
        self.horizontalLayout_29.addWidget(self.lbl_complex)
        self.verticalLayout_41.addWidget(self.fr_complex)
        self.fr_peso_ideal = QtWidgets.QFrame(parent=self.fr_salida3)
        self.fr_peso_ideal.setMinimumSize(QtCore.QSize(0, 70))
        self.fr_peso_ideal.setMaximumSize(QtCore.QSize(16777215, 70))
        self.fr_peso_ideal.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_peso_ideal.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_peso_ideal.setObjectName("fr_peso_ideal")
        self.horizontalLayout_30 = QtWidgets.QHBoxLayout(self.fr_peso_ideal)
        self.horizontalLayout_30.setObjectName("horizontalLayout_30")
        self.lbl_icon_11 = QtWidgets.QLabel(parent=self.fr_peso_ideal)
        self.lbl_icon_11.setMinimumSize(QtCore.QSize(25, 25))
        self.lbl_icon_11.setMaximumSize(QtCore.QSize(25, 25))
        self.lbl_icon_11.setText("")
        self.lbl_icon_11.setPixmap(QtGui.QPixmap("icons/icon_lista.png"))
        self.lbl_icon_11.setScaledContents(True)
        self.lbl_icon_11.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.lbl_icon_11.setObjectName("lbl_icon_11")
        self.horizontalLayout_30.addWidget(self.lbl_icon_11)
        self.lbl_peso_ideal = QtWidgets.QLabel(parent=self.fr_peso_ideal)
        font = QtGui.QFont()
        font.setFamily("Circular Std")
        font.setPointSize(10)
        self.lbl_peso_ideal.setFont(font)
        self.lbl_peso_ideal.setObjectName("lbl_peso_ideal")
        self.horizontalLayout_30.addWidget(self.lbl_peso_ideal)
        self.verticalLayout_41.addWidget(self.fr_peso_ideal)
        self.horizontalLayout_18.addWidget(self.fr_salida3)
        self.verticalLayout_39.addWidget(self.fr_content_s)
        self.horizontalLayout_6.addWidget(self.fr_seccion_s)
        self.verticalLayout_12.addWidget(self.fr_calculos)
        self.fr_buttons_s = QtWidgets.QFrame(parent=self.fr_salida)
        self.fr_buttons_s.setMinimumSize(QtCore.QSize(0, 85))
        self.fr_buttons_s.setMaximumSize(QtCore.QSize(16777215, 85))
        self.fr_buttons_s.setStyleSheet("background-color: None;")
        self.fr_buttons_s.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_buttons_s.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_buttons_s.setObjectName("fr_buttons_s")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.fr_buttons_s)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setSpacing(0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.fr_btn_patient_s = QtWidgets.QFrame(parent=self.fr_buttons_s)
        self.fr_btn_patient_s.setMinimumSize(QtCore.QSize(0, 70))
        self.fr_btn_patient_s.setMaximumSize(QtCore.QSize(16777215, 70))
        self.fr_btn_patient_s.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_btn_patient_s.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_btn_patient_s.setObjectName("fr_btn_patient_s")
        self.verticalLayout_33 = QtWidgets.QVBoxLayout(self.fr_btn_patient_s)
        self.verticalLayout_33.setObjectName("verticalLayout_33")
        self.btn_patient_s = QtWidgets.QPushButton(parent=self.fr_btn_patient_s)
        self.btn_patient_s.setMinimumSize(QtCore.QSize(160, 50))
        self.btn_patient_s.setMaximumSize(QtCore.QSize(160, 50))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(13)
        self.btn_patient_s.setFont(font)
        self.btn_patient_s.setStyleSheet("QPushButton {\n"
"background-color: rgb(0, 0, 61);\n"
"color: rgb(255, 255, 255);\n"
"border: 1px solid white;\n"
"border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"background-color: rgb(0, 0, 31);\n"
"color: white;\n"
"}")
        self.btn_patient_s.setObjectName("btn_patient_s")
        self.verticalLayout_33.addWidget(self.btn_patient_s)
        self.horizontalLayout_5.addWidget(self.fr_btn_patient_s, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.fr_btn_inform_s = QtWidgets.QFrame(parent=self.fr_buttons_s)
        self.fr_btn_inform_s.setMinimumSize(QtCore.QSize(0, 70))
        self.fr_btn_inform_s.setMaximumSize(QtCore.QSize(16777215, 70))
        self.fr_btn_inform_s.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_btn_inform_s.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_btn_inform_s.setObjectName("fr_btn_inform_s")
        self.verticalLayout_34 = QtWidgets.QVBoxLayout(self.fr_btn_inform_s)
        self.verticalLayout_34.setObjectName("verticalLayout_34")
        self.btn_inform_s = QtWidgets.QPushButton(parent=self.fr_btn_inform_s)
        self.btn_inform_s.setMinimumSize(QtCore.QSize(160, 50))
        self.btn_inform_s.setMaximumSize(QtCore.QSize(160, 50))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(13)
        self.btn_inform_s.setFont(font)
        self.btn_inform_s.setStyleSheet("QPushButton {\n"
"background-color: rgb(0, 0, 61);\n"
"color: rgb(255, 255, 255);\n"
"border: 1px solid white;\n"
"border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"background-color: rgb(0, 0, 31);\n"
"color: white;\n"
"}")
        self.btn_inform_s.setObjectName("btn_inform_s")
        self.verticalLayout_34.addWidget(self.btn_inform_s)
        self.horizontalLayout_5.addWidget(self.fr_btn_inform_s, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.fr_btn_model3D_s = QtWidgets.QFrame(parent=self.fr_buttons_s)
        self.fr_btn_model3D_s.setMinimumSize(QtCore.QSize(0, 70))
        self.fr_btn_model3D_s.setMaximumSize(QtCore.QSize(16777215, 70))
        self.fr_btn_model3D_s.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.fr_btn_model3D_s.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.fr_btn_model3D_s.setObjectName("fr_btn_model3D_s")
        self.verticalLayout_35 = QtWidgets.QVBoxLayout(self.fr_btn_model3D_s)
        self.verticalLayout_35.setObjectName("verticalLayout_35")
        self.btn_model3D_s = QtWidgets.QPushButton(parent=self.fr_btn_model3D_s)
        self.btn_model3D_s.setMinimumSize(QtCore.QSize(160, 50))
        self.btn_model3D_s.setMaximumSize(QtCore.QSize(160, 50))
        font = QtGui.QFont()
        font.setFamily("Circular Std Book")
        font.setPointSize(13)
        self.btn_model3D_s.setFont(font)
        self.btn_model3D_s.setStyleSheet("QPushButton {\n"
"background-color: rgb(0, 0, 61);\n"
"color: rgb(255, 255, 255);\n"
"border: 1px solid white;\n"
"border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"background-color: rgb(0, 0, 31);\n"
"color: white;\n"
"}")
        self.btn_model3D_s.setObjectName("btn_model3D_s")
        self.verticalLayout_35.addWidget(self.btn_model3D_s)
        self.horizontalLayout_5.addWidget(self.fr_btn_model3D_s, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.verticalLayout_12.addWidget(self.fr_buttons_s, 0, QtCore.Qt.AlignmentFlag.AlignBottom)
        self.verticalLayout_11.addWidget(self.fr_salida)
        self.ingresar_patient.addWidget(self.Salida)
        self.verticalLayout_22.addWidget(self.ingresar_patient)
        self.content_patient.addWidget(self.data_patient)
        self.analytics = QtWidgets.QWidget()
        self.analytics.setStyleSheet("#first_data {\n"
"border: 2.5px solid;\n"
"border-color: rgb(0, 0, 61);\n"
"border-radius: 5px;\n"
"}\n"
"\n"
"#date_data {\n"
"border: 2.5px solid;\n"
"border-color: rgb(0, 0, 61);\n"
"border-radius: 5px;\n"
"}\n"
"\n"
"#second_data {\n"
"border: 2.5px solid;\n"
"border-color: rgb(0, 0, 61);\n"
"border-radius: 5px;\n"
"}")
        self.analytics.setObjectName("analytics")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.analytics)
        self.verticalLayout_7.setSpacing(10)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.content_patient.addWidget(self.analytics)
        self.verticalLayout_6.addWidget(self.content_patient)
        self.content.addWidget(self.Paciente)
        self.Estadistica_paciente = QtWidgets.QWidget()
        self.Estadistica_paciente.setObjectName("Estadistica_paciente")
        self.content.addWidget(self.Estadistica_paciente)
        self.Model3D = QtWidgets.QWidget()
        self.Model3D.setObjectName("Model3D")
        self.content.addWidget(self.Model3D)
        self.Export = QtWidgets.QWidget()
        self.Export.setObjectName("Export")
        self.content.addWidget(self.Export)
        self.Import = QtWidgets.QWidget()
        self.Import.setObjectName("Import")
        self.content.addWidget(self.Import)
        self.Creditos = QtWidgets.QWidget()
        self.Creditos.setObjectName("Creditos")
        self.content.addWidget(self.Creditos)
        self.horizontalLayout.addWidget(self.content)
        self.verticalLayout.addWidget(self.mainwindow)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow, paises)
        self.content.setCurrentIndex(0)
        self.content_patient.setCurrentIndex(0)
        self.ingresar_patient.setCurrentIndex(0)
        self.pag_connection()
        self.strech_table()
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow, paises):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.lbl_name_program.setText(_translate("MainWindow", "Project RVR"))
        self.btn_menu.setText(_translate("MainWindow", "  Menú"))
        self.btn_paciente.setText(_translate("MainWindow", "  Paciente"))
        self.btn_estadistica_patient.setText(_translate("MainWindow", "  Estadísticas del Paciente"))
        self.btn_model3D.setText(_translate("MainWindow", "  Modelo 3D"))
        self.btn_db.setText(_translate("MainWindow", "  Base de Datos"))
        self.btn_creditos.setText(_translate("MainWindow", "   Créditos"))
        self.label.setText(_translate("MainWindow", "TextLabel"))
        self.lbl_tablep.setText(_translate("MainWindow", "Lista de Pacientes"))
        item = self.table_patient.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "ID"))
        item = self.table_patient.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Nombre Completo"))
        item = self.table_patient.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Documento"))
        item = self.table_patient.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Tipo de Paciente"))
        item = self.table_patient.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Sexo"))
        item = self.table_patient.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "País"))
        item = self.table_patient.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Opción"))
        __sortingEnabled = self.table_patient.isSortingEnabled()
        self.table_patient.setSortingEnabled(False)
        item = self.table_patient.item(0, 0)
        item.setText(_translate("MainWindow", "ID"))
        item = self.table_patient.item(0, 1)
        item.setText(_translate("MainWindow", "Paciente"))
        item = self.table_patient.item(0, 2)
        item.setText(_translate("MainWindow", "Documento"))
        item = self.table_patient.item(0, 3)
        item.setText(_translate("MainWindow", "Tipo de Paciente"))
        item = self.table_patient.item(0, 4)
        item.setText(_translate("MainWindow", "Sexo"))
        item = self.table_patient.item(0, 5)
        item.setText(_translate("MainWindow", "País"))
        item = self.table_patient.item(0, 6)
        item.setText(_translate("MainWindow", "Opcion"))
        self.content_table_patient()
        self.table_patient.setSortingEnabled(__sortingEnabled)
        self.btn_add.setText(_translate("MainWindow", " Agregar paciente"))
        self.title1.setText(_translate("MainWindow", "Datos Personales"))
        self.lbl_name.setText(_translate("MainWindow", "Nombre"))
        self.lbl_ape.setText(_translate("MainWindow", "Apellido"))
        self.lbl_doc.setText(_translate("MainWindow", "Documento"))
        self.tipo_doc.setItemText(0, _translate("MainWindow", "CI"))
        self.lbl_telf.setText(_translate("MainWindow", "Telefono"))
        self.code_country.setItemText(0, _translate("MainWindow", "+58"))
        self.lbl_fnacimiento.setText(_translate("MainWindow", "Fecha de Nacimiento"))
        self.lbl_sex.setText(_translate("MainWindow", "Sexo"))
        self.sexo.setItemText(0, _translate("MainWindow", "Masculino"))
        self.sexo.setItemText(1, _translate("MainWindow", "Femenino"))
        self.lbl_tipo_pac.setText(_translate("MainWindow", "Tipo de Paciente"))
        self.tipo_pac.setItemText(0, _translate("MainWindow", "Adulto"))
        self.tipo_pac.setItemText(1, _translate("MainWindow", "Atleta"))
        self.tipo_pac.setItemText(2, _translate("MainWindow", "Niño"))
        self.lbl_country.setText(_translate("MainWindow", "Pais de Origen"))
        for i, data in enumerate(paises):
            self.country.setItemText(i, _translate("MainWindow", data))
        self.lbl_act_deporte.setText(_translate("MainWindow", "Deporte/Actividad Física"))
        self.btn_sigR1.setText(_translate("MainWindow", "Siguiente"))
        __sortingEnabled = self.table_medidas.isSortingEnabled()
        self.table_medidas.setSortingEnabled(False)
        item = self.table_medidas.item(0, 0)
        item.setText(_translate("MainWindow", "Tipo de medida"))
        item = self.table_medidas.item(0, 1)
        item.setText(_translate("MainWindow", "Medida 1"))
        item = self.table_medidas.item(0, 2)
        item.setText(_translate("MainWindow", "Medida 2"))
        item = self.table_medidas.item(0, 3)
        item.setText(_translate("MainWindow", "Medida 3"))
        item = self.table_medidas.item(0, 4)
        item.setText(_translate("MainWindow", "Final"))
        item = self.table_medidas.item(1, 0)
        item.setText(_translate("MainWindow", "Estatura (Metros)"))
        item = self.table_medidas.item(2, 0)
        item.setText(_translate("MainWindow", "Peso (Kg)"))
        item = self.table_medidas.item(3, 0)
        item.setText(_translate("MainWindow", "Profundidad Abdominal (cm)"))
        self.table_medidas.setSortingEnabled(__sortingEnabled)
        self.lbl_pliegues_cut.setText(_translate("MainWindow", "Pliegues Cutáneos"))
        self.lbl_fecha.setText(_translate("MainWindow", "Fecha:"))
        self.lbl_name_patient_medidas.setText(_translate("MainWindow", "Paciente:"))
        self.lbl_hora.setText(_translate("MainWindow", "Hora:"))
        __sortingEnabled = self.table_pliegues_cut.isSortingEnabled()
        self.table_pliegues_cut.setSortingEnabled(False)
        item = self.table_pliegues_cut.item(0, 0)
        item.setText(_translate("MainWindow", "Tipo de medida"))
        item = self.table_pliegues_cut.item(0, 1)
        item.setText(_translate("MainWindow", "Medida 1"))
        item = self.table_pliegues_cut.item(0, 2)
        item.setText(_translate("MainWindow", "Medida 2"))
        item = self.table_pliegues_cut.item(0, 3)
        item.setText(_translate("MainWindow", "Medida 3"))
        item = self.table_pliegues_cut.item(0, 4)
        item.setText(_translate("MainWindow", "Final"))
        item = self.table_pliegues_cut.item(1, 0)
        item.setText(_translate("MainWindow", "Triceps (mm)"))
        item = self.table_pliegues_cut.item(2, 0)
        item.setText(_translate("MainWindow", "Subescapular (mm)"))
        item = self.table_pliegues_cut.item(3, 0)
        item.setText(_translate("MainWindow", "Biceps (mm)"))
        item = self.table_pliegues_cut.item(4, 0)
        item.setText(_translate("MainWindow", "Cresta Iliaca (mm)"))
        self.table_pliegues_cut.setSortingEnabled(__sortingEnabled)
        __sortingEnabled = self.table_perife_circun.isSortingEnabled()
        self.table_perife_circun.setSortingEnabled(False)
        item = self.table_perife_circun.item(0, 0)
        item.setText(_translate("MainWindow", "Tipo de medida"))
        item = self.table_perife_circun.item(0, 1)
        item.setText(_translate("MainWindow", "Medida 1"))
        item = self.table_perife_circun.item(0, 2)
        item.setText(_translate("MainWindow", "Medida 2"))
        item = self.table_perife_circun.item(0, 3)
        item.setText(_translate("MainWindow", "Medida 3"))
        item = self.table_perife_circun.item(0, 4)
        item.setText(_translate("MainWindow", "Final"))
        item = self.table_perife_circun.item(1, 0)
        item.setText(_translate("MainWindow", "P. Brazo Relajado (cm)"))
        item = self.table_perife_circun.item(2, 0)
        item.setText(_translate("MainWindow", "P. Brazo Flexionado Contraido (cm)"))
        item = self.table_perife_circun.item(3, 0)
        item.setText(_translate("MainWindow", "P. Muñeca (cm)"))
        item = self.table_perife_circun.item(4, 0)
        item.setText(_translate("MainWindow", "P. Minimo Cintura (cm)"))
        item = self.table_perife_circun.item(5, 0)
        item.setText(_translate("MainWindow", "P. Abdominal (cm)"))
        item = self.table_perife_circun.item(6, 0)
        item.setText(_translate("MainWindow", "P. Caderas (cm)"))
        self.table_perife_circun.setSortingEnabled(__sortingEnabled)
        self.lbl_medidas_simples.setText(_translate("MainWindow", "Medidas simples"))
        self.lbl_perife_circun.setText(_translate("MainWindow", "Periféricos/Circunferencias"))
        self.btn_guardar_medidas.setText(_translate("MainWindow", "Guardar"))
        self.hora_s.setText(_translate("MainWindow", "Hora:"))
        self.nombrec_s.setText(_translate("MainWindow", "Gustavo Rodriguez"))
        self.documento_s.setText(_translate("MainWindow", "Documento:"))
        self.tipo_patient_s.setText(_translate("MainWindow", "Tipo de Paciente:"))
        self.sexo_s.setText(_translate("MainWindow", "Sexo:"))
        self.pais_s.setText(_translate("MainWindow", "Pais:"))
        self.telf_s.setText(_translate("MainWindow", "Teléfono:"))
        self.Act_fisica_s.setText(_translate("MainWindow", "Actividad:"))
        self.fnacimiento_s.setText(_translate("MainWindow", "Fecha de nacimiento:"))
        self.edad_s.setText(_translate("MainWindow", "Edad:"))
        self.fecha_s.setText(_translate("MainWindow", "Fecha: "))
        self.lbl_title_cal_s.setText(_translate("MainWindow", "Cálculos"))
        self.lbl_imc.setText(_translate("MainWindow", "I.M.C:"))
        self.lbl_icc.setText(_translate("MainWindow", "I.C.C:"))
        self.lbl_ice.setText(_translate("MainWindow", "I.C.E:"))
        self.lbl_porcent_grasa.setText(_translate("MainWindow", "% de Grasa:"))
        self.lbl_p_degrasa.setText(_translate("MainWindow", "P. de Grasa:"))
        self.lbl_p_degrasa_percentil.setText(_translate("MainWindow", "% de Grasa en Percentiles:"))
        self.lbl_indice_mlg.setText(_translate("MainWindow", "Indice M.L.G:"))
        self.lbl_camb.setText(_translate("MainWindow", "C.A.M.B:"))
        self.lbl_iamb.setText(_translate("MainWindow", "I.A.M.B:"))
        self.lbl_complex.setText(_translate("MainWindow", "Complexión:"))
        self.lbl_peso_ideal.setText(_translate("MainWindow", "Peso Ideal:"))
        self.btn_patient_s.setText(_translate("MainWindow", "Volver a Pacientes"))
        self.btn_inform_s.setText(_translate("MainWindow", "Ver Informe"))
        self.btn_model3D_s.setText(_translate("MainWindow", "Ver Modelo 3D"))

    # Conexiones de las ventanas

    def pag_connection(self):
        self.btn_patient_s.clicked.connect(self.volver_pacientes)
        self.btn_menu.clicked.connect(self.side_menu)
        self.btn_paciente.clicked.connect(self.patient)
        self.btn_paciente.clicked.connect(self.side_menu_op)
        self.btn_add.clicked.connect(self.ingresar_datap)
        self.btn_sigR1.clicked.connect(self.txt_exists)
        self.table_medidas.itemChanged.connect(self.row_table)
        self.table_pliegues_cut.itemChanged.connect(self.row_table)
        self.table_perife_circun.itemChanged.connect(self.row_table)
        self.btn_guardar_medidas.clicked.connect(self.comprobar)
        self.btn_inform_s.clicked.connect(self.create_pdf)

    # Paciente

    def patient(self):
        self.selected_op(self.btn_paciente)
        self.deselected_op(self.btn_db)
        self.deselected_op(self.btn_estadistica_patient)
        self.deselected_op(self.btn_model3D)

        self.name.clear()
        self.apellido.clear()
        self.documento.clear()
        self.tipo_doc.setCurrentIndex(0)
        self.telf.clear()
        self.code_country.setCurrentIndex(0)
        self.country.setCurrentIndex(0)
        self.sexo.setCurrentIndex(0)
        self.tipo_pac.setCurrentIndex(0)

        self.content.setCurrentWidget(self.Paciente)
        self.content_patient.setCurrentWidget(self.Pacientes)

    # Tabla con la lista de pacientes

    def rows(self):
        if os.path.exists('pacientes.txt'):
            if os.stat('pacientes.txt').st_size == 0:
                row = 1
                return row
            else:
                data = []
                with open(f'pacientes.txt', 'rb') as file_row:
                    while True:
                        try:
                            info = pickle.load(file_row)
                            data.append(info)
                        except EOFError:
                            break
                row = len(data) + 1
                file_row.close()
                return row
        else:
            open('pacientes.txt', 'ab').close()
            row = 1
            return row

    def items(self):
        items = []
        filas = 0
        with open(f'pacientes.txt', 'rb') as file_new_i:
            while True:
                try:
                    info = pickle.load(file_new_i)
                    items.append(info)
                    filas += 1
                except EOFError:
                    break
        for row in range(filas):
            it = row + 1
            for i in range(6):
                item = QtWidgets.QTableWidgetItem()
                item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                font = QtGui.QFont()
                font.setFamily("Circular Std")
                font.setPointSize(11)
                item.setFont(font)
                item.setFlags(
                    QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
                self.table_patient.setItem(it, i, item)

    def content_table_patient(self):
        data_table = []
        row_data = 0
        with open(f'pacientes.txt', 'rb') as file_new_d:
            while True:
                try:
                    info = pickle.load(file_new_d)
                    data_table.append(info)
                    row_data += 1
                except EOFError:
                    break

        for position, datos in enumerate(data_table):
            item = self.table_patient.item(position + 1, 0)
            item.setText(str(datos.__dict__.get('id')))
            item = self.table_patient.item(position + 1, 1)
            item.setText(str(datos.__dict__.get('name')))
            item = self.table_patient.item(position + 1, 2)
            item.setText(str(datos.__dict__.get('doc')))
            item = self.table_patient.item(position + 1, 3)
            item.setText(str(datos.__dict__.get('t_pac')))
            item = self.table_patient.item(position + 1, 4)
            item.setText(str(datos.__dict__.get('sex')))
            item = self.table_patient.item(position + 1, 5)
            item.setText(str(datos.__dict__.get('country')))

        for position, datos in enumerate(data_table):
            self.btn_informe = QtWidgets.QPushButton()
            self.btn_informe.setMinimumSize(QtCore.QSize(20, 20))
            self.btn_informe.setMaximumSize(QtCore.QSize(20, 20))
            font = QtGui.QFont()
            font.setFamily("Circular Std")
            font.setPointSize(11)
            self.btn_informe.setFont(font)
            self.btn_informe.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
            self.btn_informe.setStyleSheet("QPushButton {\n"
                                           "border: 0px solid;\n"
                                           "border-radius: 5px;\n"
                                           "color: black;\n"
                                           "margin: 0px;\n"
                                           "padding: 0px;\n"
                                           "background-color: rgb(0, 0, 30);\n"
                                           "}\n"
                                           "\n"
                                           "QPushButton:hover {\n"
                                           "background-color: rgb(0, 0, 61);\n"
                                           "}")
            icon = QtGui.QIcon()
            icon.addPixmap(QtGui.QPixmap("icons/informe.png"), QtGui.QIcon.Mode.Normal,
                           QtGui.QIcon.State.Off)
            self.btn_informe.setIcon(icon)
            self.btn_informe.setIconSize(QtCore.QSize(20, 20))
            self.btn_informe.setObjectName("btn_informe")

            self.btn_vinforme = QtWidgets.QPushButton()
            self.btn_vinforme.setMinimumSize(QtCore.QSize(20, 20))
            self.btn_vinforme.setMaximumSize(QtCore.QSize(20, 20))
            font = QtGui.QFont()
            font.setFamily("Circular Std")
            font.setPointSize(11)
            self.btn_vinforme.setFont(font)
            self.btn_vinforme.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
            self.btn_vinforme.setStyleSheet("QPushButton {\n"
                                            "border: 0px solid;\n"
                                            "border-radius: 5px;\n"
                                            "color: black;\n"
                                            "margin: 0px;\n"
                                            "padding: 0px;\n"
                                            "background-color: rgb(0, 0, 30);\n"
                                            "}\n"
                                            "\n"
                                            "QPushButton:hover {\n"
                                            "background-color: rgb(0, 0, 61);\n"
                                            "}")
            icon = QtGui.QIcon()
            icon.addPixmap(QtGui.QPixmap("icons/verinfo.png"), QtGui.QIcon.Mode.Normal,
                           QtGui.QIcon.State.Off)
            self.btn_vinforme.setIcon(icon)
            self.btn_vinforme.setIconSize(QtCore.QSize(20, 20))
            self.btn_vinforme.setObjectName("btn_informe")

            self.btn_delete = QtWidgets.QPushButton()
            self.btn_delete.setMinimumSize(QtCore.QSize(20, 20))
            self.btn_delete.setMaximumSize(QtCore.QSize(20, 20))
            font = QtGui.QFont()
            font.setFamily("Circular Std")
            font.setPointSize(11)
            self.btn_delete.setFont(font)
            self.btn_delete.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
            self.btn_delete.setStyleSheet("QPushButton {\n"
                                          "border: 0px solid;\n"
                                          "border-radius: 5px;\n"
                                          "color: black;\n"
                                          "margin: 0px;\n"
                                          "padding: 0px;\n"
                                          "background-color: rgb(0, 0, 30);\n"
                                          "}\n"
                                          "\n"
                                          "QPushButton:hover {\n"
                                          "background-color: rgb(0, 0, 61);\n"
                                          "}")
            icon = QtGui.QIcon()
            icon.addPixmap(QtGui.QPixmap("icons/delete.png"), QtGui.QIcon.Mode.Normal,
                           QtGui.QIcon.State.Off)
            self.btn_delete.setIcon(icon)
            self.btn_delete.setIconSize(QtCore.QSize(20, 20))
            self.btn_delete.setObjectName("btn_informe")

            self.fr_button = QtWidgets.QFrame()
            self.fr_button.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
            self.fr_button.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
            self.fr_button.setObjectName("fr_button")
            button_layout = QtWidgets.QHBoxLayout(self.fr_button)
            button_layout.setContentsMargins(0, 0, 0, 0)
            button_layout.setSpacing(0)
            button_layout.setObjectName("button_layout")
            button_layout.addWidget(self.btn_informe)
            button_layout.addWidget(self.btn_vinforme)
            button_layout.addWidget(self.btn_delete)

            buttons_widget = QtWidgets.QWidget()
            buttons_widget.setLayout(button_layout)

            self.table_patient.setCellWidget(position + 1, 7, buttons_widget)

    def update_table(self):

        # Update rows
        rows = []
        row = 1
        with open(f'pacientes.txt', 'rb') as file_new_r:
            while True:
                try:
                    info = pickle.load(file_new_r)
                    rows.append(info)
                except EOFError:
                    break
        row = len(rows) + 1
        self.table_patient.setRowCount(row)

        # Update items
        items = []
        filas = 0
        with open(f'pacientes.txt', 'rb') as file_new_i:
            while True:
                try:
                    info = pickle.load(file_new_i)
                    items.append(info)
                    filas += 1
                except EOFError:
                    break
        for i in range(7):
            item = QtWidgets.QTableWidgetItem()
            item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
            font = QtGui.QFont()
            font.setFamily("Circular Std")
            font.setPointSize(11)
            item.setFont(font)
            item.setFlags(
                QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
            self.table_patient.setItem(filas, i, item)

        # Update data
        data_table = []
        new_position = 0
        with open(f'pacientes.txt', 'rb') as file_new_d:
            while True:
                try:
                    info = pickle.load(file_new_d)
                    data_table.append(info)
                    new_position += 1
                except EOFError:
                    break
        for datos in data_table:
            item = self.table_patient.item(new_position, 0)
            item.setText(str(datos.__dict__.get('id')))
            item = self.table_patient.item(new_position, 1)
            item.setText(str(datos.__dict__.get('name')))
            item = self.table_patient.item(new_position, 2)
            item.setText(str(datos.__dict__.get('doc')))
            item = self.table_patient.item(new_position, 3)
            item.setText(str(datos.__dict__.get('t_pac')))
            item = self.table_patient.item(new_position, 4)
            item.setText(str(datos.__dict__.get('sex')))
            item = self.table_patient.item(new_position, 5)
            item.setText(str(datos.__dict__.get('country')))

        for datos in data_table:
            self.btn_informe = QtWidgets.QPushButton(parent=self.menu)
            self.btn_informe.setMinimumSize(QtCore.QSize(0, 40))
            self.btn_informe.setMaximumSize(QtCore.QSize(16777215, 40))
            font = QtGui.QFont()
            font.setFamily("Circular Std")
            font.setPointSize(11)
            self.btn_informe.setFont(font)
            self.btn_informe.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
            self.btn_informe.setStyleSheet("QPushButton {\n"
                                           "border: 0px solid;\n"
                                           "color: black;\n"
                                           "}\n"
                                           "\n"
                                           "QPushButton:hover {\n"
                                           "background-color: rgb(0, 0, 30);\n"
                                           "color: white;\n"
                                           "}")
            self.btn_informe.setObjectName("btn_informe")
            self.btn_informe.setText("Informe")
            self.table_patient.setCellWidget(new_position, 7, self.btn_informe)

    def ingresar_datap(self):
        self.content.setCurrentWidget(self.Paciente)
        self.content_patient.setCurrentWidget(self.data_patient)
        self.ingresar_patient.setCurrentWidget(self.data_personal)

    def txt_exists(self):
        verificar = self.verification()
        if verificar == 1:

            self.nombrec = self.name.text() + " " + self.apellido.text()
            self.date = datetime.now().date()
            self.hora = datetime.now().time()
            h = str(self.hora.hour)
            min = str(self.hora.minute)
            seg = str(self.hora.second)
            hora_completa = h + ":" + min + ":" + seg

            self.lbl_name_patient_medidas.setText("Paciente: " + self.nombrec)
            self.lbl_fecha.setText("Fecha: " + str(self.date))
            self.lbl_hora.setText("Hora: " + hora_completa)
            self.ingresar_patient.setCurrentWidget(self.Mediciones)

    def row_table(self, item):
        table1 = self.table_medidas
        table2 = self.table_pliegues_cut
        table3 = self.table_perife_circun

        if (table1.item(1, 4).text() == "" or table1.item(2, 4).text() == "" or table1.item(3, 4).text() == "") and item.row() <= 3:
            print("hola1")
            medidas = [1, 2]
            table1 = self.table_medidas
            self.item_content(table1, item.row(), medidas)
        if (table2.item(1, 4).text() == "" or table2.item(2, 4).text() == "" or table2.item(3, 4).text() == "" or table2.item(4, 4).text() == "" ) and item.row() <= 4:
            print("hola2")
            medidas = [0]
            table2 = self.table_pliegues_cut
            self.item_content(table2, item.row(), medidas)
        if (table3.item(1, 4).text() == "" or table3.item(2, 4).text() == "" or table3.item(3, 4).text() == "" or table3.item(4, 4).text() == "" or table3.item(5, 4).text() == "" or table3.item(6, 4).text() == "") and item.row() <= 6:
            print("hola3")
            medidas = [1, 2, 3, 4, 6]
            table3 = self.table_perife_circun
            self.item_content(table3, item.row(), medidas)

    def item_content(self, table, row, tipo_m):
        nombre_medida = table.item(row, 0).text()
        lim = self.check_medidas(row, tipo_m, table)
        if lim != 0:
            if table.item(row, 1).text() != "" or table.item(row, 2).text() != "":
                prueba = self.comparativa(row, lim, table)
                if prueba:
                    table.blockSignals(True)
                    if table.signalsBlocked():
                        if table.item(row, 3).text() == "":
                            msg = QMessageBox()
                            QMessageBox.information(msg, "Aviso",
                                                    "¡La medida " + nombre_medida + " requiere que ingrese una 3ra medida")
                            item = QtWidgets.QTableWidgetItem()
                            item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                            font = QtGui.QFont()
                            font.setFamily("Circular Std")
                            font.setPointSize(10)
                            item.setFont(font)
                            table.setItem(row, 3, item)
                        self.calculos(row, table)
                        table.blockSignals(False)
                elif not prueba:
                    table.blockSignals(True)
                    if table.signalsBlocked():
                        print("No bb, asi esta bien.")
                        self.calculos2medidas(row, table)
                        table.blockSignals(False)
            else:
                print("Faltan medidas.")
        else:
            print("Error en las medidas agregadas.")

    def check_medidas(self, i, m, table):

        if table.item(i, 1) == "" or table.item(i, 2).text() == "":
            print("Las medidas 1 y 2 no pueden estar vacias.")
            return 0
        if table.item(i, 1).text().isdigit() is False or table.item(i, 2).text().isdigit() is False:
            print("Los valores solo pueden ser numeros.")
            return 0
        elif table.item(i, 1).text().isdigit() is True and table.item(i, 2).text().isdigit() is True:
            if i in m:
                return 1
            else:
                return 5
        else:
            print("Error al ingresar los datos en la tabla.")
            return 0

    def calculos(self, i, table):

        if table.item(i, 3).text().isdigit() is False:

            print("Los valores solo pueden ser numeros.")

        elif table.item(i, 3).text().isdigit() == "":

            print("La medicion 3 no puede estar vacia.")

        elif table.item(i, 3).text().isdigit() is True:

            dato1 = float(table.item(i, 1).text())
            dato2 = float(table.item(i, 2).text())
            dato3 = float(table.item(i, 3).text())

            if dato1 <= dato2 <= dato3 or dato3 <= dato2 <= dato1:
                item = QtWidgets.QTableWidgetItem()
                item.setText(str(dato2))
                item.setFlags(
                    QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
                table.setItem(i, 4, item)
            elif dato2 <= dato1 <= dato3 or dato3 <= dato1 <= dato2:
                item = QtWidgets.QTableWidgetItem()
                item.setText(str(dato1))
                item.setFlags(
                    QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
                table.setItem(i, 4, item)
            else:
                item = QtWidgets.QTableWidgetItem()
                item.setText(str(dato3))
                item.setFlags(
                    QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
                table.setItem(i, 4, item)
        else:
            print("Error en el ingreso de datos.")

    def calculos2medidas(self, i, table):

        dato1 = float(table.item(i, 1).text())
        dato2 = float(table.item(i, 2).text())

        datof = (dato1 + dato2) / 2
        item = QtWidgets.QTableWidgetItem()
        item.setText(str(datof))
        item.setFlags(
            QtCore.Qt.ItemFlag.ItemIsDragEnabled | QtCore.Qt.ItemFlag.ItemIsDropEnabled | QtCore.Qt.ItemFlag.ItemIsUserCheckable | QtCore.Qt.ItemFlag.ItemIsEnabled)
        table.setItem(i, 4, item)

    def comparativa(self, i, lim, table):
        dato1 = float(table.item(i, 1).text())
        dato2 = float(table.item(i, 2).text())

        if dato1 != dato2:
            datofp = (abs(dato1 - dato2) / dato1) * 100
            return datofp > lim
        return False

    def comprobar(self):

        verify = False

        table1 = self.table_medidas
        table2 = self.table_pliegues_cut
        table3 = self.table_perife_circun
        cont1 = 1
        cont2 = 1
        cont3 = 1

        for i in range(3):
                if table1.item(cont1, 4).text() != "":
                        if cont1 == 3:
                                for i in range(4):
                                        if table2.item(cont2, 4).text() != "":
                                                if cont2 == 3:
                                                        for i in range(6):
                                                                if table3.item(cont3, 4).text() != "":
                                                                        if cont3 == 6:
                                                                                verify = True
                                                                else:
                                                                    msg = QMessageBox()
                                                                    QMessageBox.critical(msg,
                                                                                         "Error en la tabla Perifericos/Circunferencias",
                                                                                         "Faltan valores por completar en la tabla.")
                                                                    verify = False
                                                                    print("Hola")
                                                                    break
                                                                cont3 += 1
                                        else:
                                            msg = QMessageBox()
                                            QMessageBox.critical(msg, "Error en la tabla Pliegues Cutaneos",
                                                                 "Faltan valores por completar en la tabla.")
                                            verify = False
                                            break
                                        cont2 += 1
                else:
                        msg = QMessageBox()
                        QMessageBox.critical(msg, "Error en la tabla Medidas Simples", "Faltan valores por completar en la tabla.")
                        verify = False
                        break
                cont1 += 1

        if verify is True:

                self.ingresar_patient.setCurrentWidget(self.Salida)

                self.nombrec = self.name.text() + " " + self.apellido.text()
                self.date = datetime.now().date()
                self.hora = datetime.now().time()
                h = str(self.hora.hour)
                min = str(self.hora.minute)
                seg = str(self.hora.second)
                hora_completa = h + ":" + min + ":" + seg

                self.nombrec_s.setText("Paciente: " + self.nombrec)
                self.fecha_s.setText("Fecha: " + str(self.date))
                self.hora_s.setText("Hora: " + hora_completa)

                self.guardar_data(self.nombrec, self.date, hora_completa)
        else:
                print("Faltan valores por completar en alguna de las tablas.")
                #msg = QMessageBox()
                #QMessageBox.critical(msg, "Error", "Faltan valores por completar.")

    def verification(self):
        name = self.name.text()
        apellido = self.apellido.text()
        documento = self.documento.text()
        telf = self.telf.text()
        deporte = self.act_deporte.text()

        if name.isalpha() == True:
            if apellido.isalpha() == True:
                if documento.isdigit() == True:
                    if telf.isdigit() == True:
                            if deporte.isalpha() == True:
                                    return 1
                            elif deporte == "":
                                    msg = QMessageBox()
                                    QMessageBox.warning(msg, "Alerta", "El campo de Deporte/Actividad Física no puede estar vacio.")
                            else:
                                    msg = QMessageBox()
                                    QMessageBox.critical(msg, "Problema con la Actividad Física",
                                                         "El campo solo puede contener caracteres alfabeticos.")
                    elif telf == "":
                        msg = QMessageBox()
                        QMessageBox.warning(msg, "Alerta", "El campo de teléfono no puede estar vacio.")
                    else:
                        msg = QMessageBox()
                        QMessageBox.critical(msg, "Problema con el teléfono",
                                             "El teléfono solo puede contener caracteres númericos.")
                elif documento == "":
                    msg = QMessageBox()
                    QMessageBox.warning(msg, "Alerta", "El campo de documento no puede estar vacio.")
                else:
                    msg = QMessageBox()
                    QMessageBox.critical(msg, "Problema con la identificación",
                                         "El documento solo puede contener caracteres númericos.")
            elif apellido == "":
                msg = QMessageBox()
                QMessageBox.warning(msg, "Alerta", "El campo de apellido no puede estar vacio.")
            else:
                msg = QMessageBox()
                QMessageBox.critical(msg, "Problema con el apellido",
                                     "El apellido solo puede contener caracteres alfabeticos.")
        elif name == "":
            msg = QMessageBox()
            QMessageBox.warning(msg, "Alerta", "El campo de nombre no puede estar vacio.")
        else:
            msg = QMessageBox()
            QMessageBox.critical(msg, "Problema con el nombre",
                                 "El nombre solo puede contener caracteres alfabeticos.")

    def guardar_data(self, nombrec, fecha, hora):

        medidas = []

        table1 = self.table_medidas
        table2 = self.table_pliegues_cut
        table3 = self.table_perife_circun
        cont1 = 1
        cont2 = 1
        cont3 = 1

        for i in range(3):
                medidas.append(table1.item(cont1, 4).text())
                if cont1 == 3:
                        for i in range(4):
                                medidas.append(table2.item(cont2, 4).text())
                                if cont2 == 3:
                                        for i in range(6):
                                                medidas.append(table3.item(cont2, 4).text())
                                                cont3 += 1
                                cont2 += 1

                cont1 += 1

        lbl_adulto_h = [self.lbl_imc, self.lbl_icc ,self.lbl_ice ,self.lbl_porcent_grasa
                        ,self.lbl_p_degrasa ,self.lbl_p_degrasa_percentil ,self.lbl_indice_mlg
                        ,self.lbl_camb, self.lbl_iamb ,self.lbl_complex ,self.lbl_peso_ideal]

        salida_f = self.salida_final(medidas)
        salida_f = [float(medida) for medida in salida_f]

        for label, salida in zip(lbl_adulto_h, salida_f):
            label.setText(f"{label.text()} {salida:.2f}")

        datas = []
        self.fecha = str(fecha)
        self.hora = str(hora)
        self.doc_complete = self.tipo_doc.currentText() + "-" + self.documento.text()
        if os.stat('pacientes.txt').st_size == 0:
            new_patient = Patient(1, nombrec, self.doc_complete, self.tipo_pac.currentText(),
                                  self.sexo.currentText(), self.country.currentText(), self.fecha, self.hora, medidas)
            with open(f'pacientes.txt', 'ab') as file:
                pickle.dump(new_patient, file)
            file.close()
            self.confirm_patient()
        else:
            with open(f'pacientes.txt', 'rb') as file2:
                while True:
                    try:
                        data = pickle.load(file2)
                        datas.append(data)
                    except EOFError:
                        break
                file2.close()
            for indice, data in enumerate(datas):
                if self.documento.text() in data.__dict__.values():
                    self.problem_patient()
                    break
                elif self.documento.text() not in data.__dict__.values() and indice + 1 == len(datas):
                    self.doc_complete = self.tipo_doc.currentText() + "-" + self.documento.text()
                    id = indice + 1
                    if id == indice:
                        id += 1
                    new_patient = Patient(str(id), nombrec, self.doc_complete,
                                          self.tipo_pac.currentText(), self.sexo.currentText(),
                                          self.country.currentText(), self.fecha, self.hora, medidas)
                    with open(f'pacientes.txt', 'ab') as file:
                        pickle.dump(new_patient, file)
                    file.close()
                    self.confirm_patient()
                    break

    def salida_final(self, medidas):

        fecha_nac = datetime.strptime(str(self.fnacimiento.text()), "%m/%d/%Y")
        now = datetime.now()
        date = now.strftime("%m/%d/%Y")
        fecha_me = datetime.strptime(str(date), "%m/%d/%Y")
        edad = relativedelta(fecha_me, fecha_nac).years

        estatura = float(medidas[0])
        peso = float(medidas[1])
        prof_abdominal = float(medidas[2])
        triceps = float(medidas[3])
        subescapular = float(medidas[4])
        biceps = float(medidas[5])
        cresta_iliaca = float(medidas[6])
        p_brazo_rela = float(medidas[7])
        p_brazo_flex_contraido = float(medidas[8])
        p_muñeca = float(medidas[9])
        p_min_cintura = float(medidas[10])
        p_abdo = float(medidas[11])
        p_caderas = float(medidas[12])

        imc = peso/estatura**2

        icc = p_min_cintura/p_caderas

        ice = p_min_cintura/estatura

        porcent_grasa = triceps+subescapular+biceps+cresta_iliaca
        porcent_grasa_con_log = log(porcent_grasa)
        dato6 = 1.1610 - (0.0632 * porcent_grasa_con_log)
        dato7 = ((4.95 / dato6) - 4.50) * 100
        porcent_grasa_f = dato7

        peso_d_grasa = peso*(porcent_grasa_f/100)

        porcent_grasa_percentil = self.porcent_grasa_percentil(porcent_grasa_f, edad)

        indice_mlg = (peso*(((100-porcent_grasa_f)/100)+6.1*(1.8*estatura)))/estatura**2

        dato_extra = 0.31416 * (triceps / 10)
        camb = (((p_brazo_rela-dato_extra)**2)/(4*3.1416))-10.0

        iamb = self.iamb(porcent_grasa_f, edad)

        complex = estatura/p_muñeca

        peso_ideal = estatura - 100 - (((estatura-150)/4)+((edad-20)/20))

        salida = [imc, icc, ice, porcent_grasa_f, peso_d_grasa,porcent_grasa_percentil, indice_mlg, camb, iamb, complex, peso_ideal]
        return salida

    def create_pdf(self, filename):

            fecha_nac = datetime.strptime(str(self.fnacimiento.text()), "%m/%d/%Y")
            now = datetime.now()
            date = now.strftime("%m/%d/%Y")
            fecha_me = datetime.strptime(str(date), "%m/%d/%Y")
            edad = relativedelta(fecha_me, fecha_nac).years

            apellidos = self.apellido.text()
            nombres = self.name.text()
            sexo = self.sexo.currentText()
            tipo_doc = self.tipo_doc.currentText()
            id_doc = self.documento.text()
            lugar_nac = self.country.currentText()
            deporte = self.act_deporte.text()
            tipo_pa = self.tipo_pac.currentText()

            data = object()
            with open(f'pacientes.txt', 'rb') as file_new_d:
                    while True:
                            try:
                                    info = pickle.load(file_new_d)
                                    data = info
                            except EOFError:
                                    break

            estatura = float(vars(data).get('medidas')[0])
            peso = float(vars(data).get('medidas')[1])
            triceps = float(vars(data).get('medidas')[3])
            subescapular = float(vars(data).get('medidas')[4])
            biceps = float(vars(data).get('medidas')[5])
            cresta_iliaca = float(vars(data).get('medidas')[6])
            p_brazo_rela = float(vars(data).get('medidas')[7])
            p_muñeca = float(vars(data).get('medidas')[9])
            p_min_cintura = float(vars(data).get('medidas')[10])
            p_caderas = float(vars(data).get('medidas')[12])

            imc = round(peso / estatura ** 2, 2)
            icc = round(p_min_cintura / p_caderas, 2)
            ice = round(p_min_cintura / estatura, 2)
            porcent_grasa = triceps + subescapular + biceps + cresta_iliaca
            porcent_grasa_con_log = log(porcent_grasa)
            dato1 = 1.1610 - (0.0632 * porcent_grasa_con_log)
            por_grasa = ((4.95 / dato1) - 4.50) * 100
            pe_grasa = round(peso * (por_grasa / 100), 2)
            result_por_grasa_p = self.porcent_grasa_percentil(por_grasa, edad)
            por_grasa_p = round(float(result_por_grasa_p), 2)
            mlg = round((peso * (((100 - por_grasa) / 100) + 6.1 * (1.8 * estatura))) / estatura ** 2, 2)
            dato_extra = 0.31416 * (triceps / 10)
            camb = round((((p_brazo_rela - dato_extra) ** 2) / (4 * 3.1416)) - 10.0, 2)
            result_iamb = self.iamb(por_grasa, edad)
            iamb = round(float(result_iamb), 2)
            complexion = round(estatura / p_muñeca, 2)
            peso_ideal = round(estatura - 100 - (((estatura - 150) / 4) + ((edad - 20) / 20)), 2)

            imc = str(imc)
            icc = str(icc)
            ice = str(ice)
            pe_grasa = str(pe_grasa)
            por_grasa_p = str(por_grasa_p)
            mlg = str(mlg)
            camb = str(camb)
            iamb = str(iamb)
            complexion = str(complexion)
            peso_ideal = str(peso_ideal)

            ##fuente: Helvetica

            pdf = FPDF('P', 'pt', (2067, 2756))
            pdf.add_page()
            pdf.set_font("Helvetica", "B", 64)
            pdf.image("images/formato_informe.jpg", 0, 0)
            ## 7 espacios en blanco para primera
            top = pdf.y
            offset = pdf.x + 40
            pdf.multi_cell(0, 20, f"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       "
                                  f"{apellidos}\n\n\n\n\n\n\n\n\n       "
                                  f"{nombres}\n\n\n\n\n\n\n\n\n       "
                                  f"{sexo}\n\n\n\n\n\n\n\n\n       "
                                  f"{tipo_doc}\n\n\n\n\n\n\n\n\n       "
                                  f"{id_doc}\n\n\n\n\n\n\n\n\n       "
                                  f"{lugar_nac}\n\n\n\n\n\n\n\n\n\n       "
                                  f"{deporte}\n\n\n\n\n\n\n\n\n       "
                                  f"{tipo_pa}\n\n\n\n\n\n\n\n\n       "
                                  f"{fecha_me}\n\n\n\n\n\n\n\n\n       "
                                  f"{fecha_nac}\n\n\n\n\n\n\n\n\n\n       "
                                  f"{estatura}\n\n\n\n\n\n\n\n       "
                                  f"{peso}")

            pdf.y = top
            pdf.x = offset

            pdf.multi_cell(0, 20, f"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
                                  f"                                                            {imc}\n\n\n\n\n\n\n\n\n\n"
                                  f"                                                            {icc}\n\n\n\n\n\n\n\n\n"
                                  f"                                                            {ice}\n\n\n\n\n\n\n\n\n\n"
                                  f"                                                            {por_grasa}\n\n\n\n\n\n\n\n\n\n"
                                  f"\n\n"
                                  f"                                                            {pe_grasa}\n\n\n\n\n\n\n\n\n\n"
                                  f"                                                            {por_grasa_p}\n\n\n\n\n\n\n\n\n"
                                  f"                                                            {mlg}\n\n\n\n\n\n\n\n\n\n"
                                  f"                                                            {camb}\n\n\n\n\n\n\n\n\n\n"
                                  f"                                                            {iamb}\n\n\n\n\n\n\n\n\n"
                                  f"                                                            {complexion}\n\n\n\n\n\n\n\n\n\n"
                                  f"                                                            {peso_ideal}")

            pdf.add_page()
            pdf.set_font("Helvetica", "B", 64)
            pdf.image("images/formato_valoracion.jpg", 0, 0)
            pdf.y = top
            pdf.x = offset

            def imc_medic(imc):
                    fimc = float(imc)
                    if fimc < 18.5:
                            print("peso bajo")
                            return "peso bajo"
                    elif 18.5 < fimc < 24.9:
                            print("Peso saludable")
                            return "peso saludable"
                    elif 18.5 < fimc < 24.9:
                            print("Sobre peso")
                            return "sobre peso"
                    elif 18.5 < fimc < 24.9:
                            print("Obesidad, grado 1")
                            return "obesidad, grado 1"
                    elif 18.5 < fimc < 24.9:
                            print("Obesidad, grado 2")
                            return "obesidad, grado 2"
                    elif 18.5 < fimc < 24.9:
                            print("Obesidad, grado 3, obesidad morbida")
                            return "obesidad, grado 3, obesidad morbida"
                    else:
                            print("error final1bonus1")
                            return "error imc"

            def icc_medic(icc, sexo):
                    ficc = float(icc)
                    if sexo == "Masculino":
                            if ficc >= 1.0:
                                    print("androide")
                                    return "androide"
                            elif ficc < 1.0:
                                    print("ginecoide")
                                    return "ginecoide"
                            else:
                                    print("error final2bonus1")
                                    return "error icc"
                    elif sexo == "Femenino":
                            if ficc >= 0.8:
                                    print("androide")
                                    return "androide"
                            elif ficc < 0.8:
                                    print("ginecoide")
                                    return "ginecoide"
                            else:
                                    print("error final2bonus1")
                                    return "error icc"
                    else:
                            print("error sexo")
                            return "error sexo"

            def icc_texto(icc):
                    if icc == "androide":
                            return f"usted tiene mayor riesgo para el desarrollo de \n\n\n       " \
                                   f"enfermedades crónico-degenerativas debido a la \n\n\n       " \
                                   f"acumulación de grasa visceral"
                    elif icc == "ginecoide":
                            return f"usted tiene mayor riesgo problemas de retorno \n\n\n       " \
                                   f"venoso"

            def mlg_medic(mlg, sexo):
                    fmlg = float(mlg)
                    if sexo == "Masculino":
                            mlgh = [18, 20, 22, 25]
                            dato2 = min(mlgh, key=lambda x: abs(x - fmlg))
                            if dato2 == 18:
                                    print("Complexión ligera con poca musculatura")
                                    return "con complexion ligera con poca musculatura"
                            if dato2 == 20:
                                    print("Musculatura promedio")
                                    return "con musculatura promedio"
                            if dato2 == 22:
                                    print("Marcadamente musculoso ")
                                    return "marcadamente musculoso"
                            if dato2 == 25:
                                    print("No se logra normalmente sin levantar pesas / Límite superior de la musculatura obtenida sin uso de "
                                          "agentes fármaco-lógicos, por lo que el MLG podría llegar a 40")
                                    return f"en un rango que no se logra normalmente sin \n\n\n       " \
                                           f"levantar pesas / límite superior de la \n\n\n       " \
                                           f"musculatura obtenida sin uso de agentes \n\n\n       " \
                                           f"fármaco-lógicos, por loque el MLG podría  \n\n\n       " \
                                           f"llegar a 40"
                            else:
                                    print("error final2bonus1")
                                    return "error mlg"
                    elif sexo == "Femenino":
                            mlgm = [13, 15, 17, 22]
                            dato2 = min(mlgm, key=lambda x: abs(x - fmlg))
                            if dato2 == 13:
                                    print("Complexión ligera con poca musculatura")
                                    return "con complexion ligera con poca musculatura"
                            if dato2 == 15:
                                    print("Musculatura promedio")
                                    return "con musculatura promedio"
                            if dato2 == 17:
                                    print("Marcadamente musculoso ")
                                    return "marcadamente musculosa"
                            if dato2 == 22:
                                    print(
                                            "No se logra normalmente sin levantar pesas / Límite superior de la musculatura obtenida sin uso "
                                            "de agentes fármaco-lógicos, por lo que el MLG podría llegar a 40")
                                    return "con medidas que no se logran normalmente \n\n\n      " \
                                           "sin levantar pesas / límite superior de \n\n\n      " \
                                           "la musculatura obtenida sin uso de \n\n\n      " \
                                           "agentes fármaco-lógicos, por lo que el \n\n\n      " \
                                           "MLG podría llegar a 40"
                            else:
                                    print("error final2bonus1")

            def iamb_medic(iamb):
                    fiamb = float(iamb)
                    if fiamb < 5:
                            print("Bajo nivel de musculatura o disminución")
                            return "un bajo nivel de musculatura o disminucion"
                    elif fiamb in range(5, 15):
                            print("Masa muscular debajo del promedio")
                            return "una masa muscular debajo del promedio"
                    elif fiamb in range(16, 85):
                            print("Masa muscular promedio")
                            return "una masa muscular promedio"
                    elif fiamb in range(86, 95):
                            print("Masa muscular arriba del promedio o hipertrofia muscular")
                            return "una masa muscular arriba del promedio o \n\n\n      " \
                                   "hièrtrofia muscular"
                    elif fiamb > 95:
                            print("Masa muscular alta - hipertrofia muscular")
                            return "una masa muscular alta - hipertrofia \n\n\n      " \
                                   "muscular"
                    else:
                            print("error iamb")
                            return "error iamb"

            def complexion_medic(complexion, sexo):
                    fcomplexion = float(complexion)
                    if sexo == "Masculino":
                            if fcomplexion > 10.4:
                                    print("complexion pequeña")
                                    return "complexion pequeña"
                            elif 9.6 < fcomplexion < 10.3:
                                    print("complexion mediana")
                                    return "complexion mediana"
                            elif fcomplexion < 9.5:
                                    print("complexion grande")
                                    return "complexion grande"
                    elif sexo == "Femenino":
                            if fcomplexion > 10.9:
                                    print("complexion pequeña")
                                    return "complexion pequeña"
                            elif 9.9 < fcomplexion < 10.8:
                                    print("complexion mediana")
                                    return "complexion mediana"
                            elif fcomplexion < 9.8:
                                    print("complexion grande")
                                    return "complexion grande"

            def peso_ideal_medic(peso, peso_ideal):
                    fpeso = float(peso)
                    fpeso_ideal = float(peso_ideal)
                    print(fpeso_ideal)
                    ## abajo esta % de peso ideal, falta este dato de salida
                    dato3 = int((fpeso * 100) / fpeso_ideal)
                    print(dato3)
                    if dato3 < 60:
                            print("Malnutrición severa")
                            return "malnutricion severa"
                    elif 60 <= dato3 <= 89:
                            print("Malnutrición moderada")
                            return "malnutricion moderada"
                    elif 90 <= dato3 <= 109:
                            print("Normalidad")
                            return "nutricion promedio"
                    elif 110 <= dato3 <= 120:
                            print("Sobrepeso")
                            return "sobrepeso"
                    elif dato3 > 120:
                            print("Obesidad")
                    else:
                            print("error")

            imc_info = imc_medic(imc)
            icc_info = icc_medic(icc, sexo)
            icc_text = icc_texto(icc_info)
            mlg_info = mlg_medic(mlg, sexo)
            iamb_info = iamb_medic(iamb)
            complexion_info = complexion_medic(complexion, sexo)
            peso_ideal_info = peso_ideal_medic(peso, peso_ideal)

            pdf.multi_cell(0, 20, f"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       "
                                  f"con un indice de masa corporal de "
                                  f"{imc} usted califica que \n\n\n       posee {imc_info}\n\n\n\n\n\n       "
                                  f"con un indice cintura cadera de {icc} usted califica como \n\n\n       "
                                  f"{icc_info} y {icc_text}\n\n\n\n\n\n       "
                                  f"con un indice de masa libre de grasa de {mlg} usted esta \n\n\n       "
                                  f"{mlg_info}\n\n\n\n\n\n       "
                                  f"con un indice del area muscular del brazo de {iamb} \n\n\n       "
                                  f"en persentiles se puede afirmar que usted posee \n\n\n       "
                                  f"{iamb_info}\n\n\n\n\n\n       "
                                  f"con un indice de complexion de {complexion} usted posee una \n\n\n       "
                                  f"{complexion_info}\n\n\n\n\n\n       "
                                  f"con un porcentaje de peso ideal del {peso_ideal} usted posee \n\n\n       "
                                  f"{peso_ideal_info}")

            pdf.output("informe.pdf", "F")

    def porcent_grasa_percentil(self, porcentaje_g, edad_u):
            edad_min = [18, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70]
            edad_max = [24, 29, 34, 39, 44, 49, 54, 59, 64, 69, 74]
            tabla = [8, 9, 10, 12, 16, 20, 23, 25, 28], [9, 10, 11, 13, 18, 23, 25, 26, 29], [16, 17, 18, 20, 23, 26, 27, 28, 30], [15, 17, 18, 20, 23, 25, 27, 27, 29], [14, 16, 18, 21,
                                                                                                                  26,
                                                                                                                  30,
                                                                                                                  32,
                                                                                                                  34,
                                                                                                                  36], [15, 17, 19, 21, 26, 30, 32, 34, 36], [15, 17, 19, 22, 27, 31, 30, 35, 37], [15, 18, 20, 22, 27, 31,30, 35, 37], [16, 18,
                                                                                                              20, 22,
                                                                                                              27, 31,
                                                                                                              33, 35,
                                                                                                              37], [13,
                                                                                                                    16,
                                                                                                                    18,
                                                                                                                    21,
                                                                                                                    26,
                                                                                                                    30,
                                                                                                                    33,
                                                                                                                    35,
                                                                                                                    37], [13, 16, 18, 21, 26, 30, 33, 34, 36]
            percentil = [5, 10, 15, 25, 50, 75, 85, 90, 95]

            for edad in zip(edad_min, edad_max):

                    if edad_u >= edad[0] and edad_u <= edad[1]:

                            posicion_edad = edad_min.index(edad[0])
                            percentage = tabla[posicion_edad]

                            for valor in percentage:
                                    closest_body_fat = min(percentage, key=lambda x: abs(x - porcentaje_g))
                                    if closest_body_fat == valor:
                                            ubicacion = percentage.index(valor)
                                            return str(percentil[ubicacion])

    def iamb(self, porcentaje_g, edad_u):
            edad_min = [18, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70]
            edad_max = [24, 29, 34, 39, 44, 49, 54, 59, 64, 69, 74]
            tabla = [34.2, 37.3, 39.6, 42.7, 49.4, 57.1, 61.8, 65.0, 72.0], [36.6, 39.9, 42.4, 46.0, 53.0, 61.4, 66.1,
                                                                             68.9, 74.5], [37.9, 40.9, 43.4, 47.3, 54.4,
                                                                                           63.2, 67.6, 70.8, 76.1], [
                    38.5, 42.6, 44.6, 47.9, 55.3, 64.0, 69.1, 72.7, 77.6], [38.4, 42.1, 45.1, 48.7, 56.0, 64.0, 68.5,
                                                                            71.6, 77.0], [37.7, 41.3, 43.7, 47.9, 55.2,
                                                                                          63.3, 68.4, 72.2, 76.2], [
                    36.0, 40.0, 42.7, 46.6, 54.0, 62.7, 67.0, 70.4, 77.4], [36.5, 40.8, 42.7, 46.7, 54.3, 61.9, 66.4,
                                                                            69.6, 75.1], [34.5, 38.7, 41.2, 44.9, 52.1,
                                                                                          60.0, 64.8, 67.5, 71.6], [
                    31.4, 35.8, 38.4, 42.3, 49.1, 57.3, 61.2, 64.3, 69.4], [29.7, 33.8, 36.1, 40.2, 47.0, 54.6, 59.1,
                                                                            62.1, 67.3]
            percentil = [5, 10, 15, 25, 50, 75, 85, 90, 95]

            for edad in zip(edad_min, edad_max):

                    if edad_u >= edad[0] and edad_u <= edad[1]:

                            posicion_edad = edad_min.index(edad[0])
                            percentage = tabla[posicion_edad]

                            for valor in percentage:
                                    closest_body_fat = min(percentage, key=lambda x: abs(x - porcentaje_g))
                                    if closest_body_fat == valor:
                                            ubicacion = percentage.index(valor)
                                            return str(percentil[ubicacion])

    def problem_patient(self):
        msg = QMessageBox()
        QMessageBox.critical(msg, "Error al registrar al paciente",
                             "Este paciente ya se encuentra en el sistema.")
        self.content.setCurrentWidget(self.Paciente)
        self.content_patient.setCurrentWidget(self.Pacientes)

    def confirm_patient(self):
        msg = QMessageBox()
        QMessageBox.information(msg, "Registro completado",
                                "¡El paciente " + self.name.text() + " " + self.apellido.text() + " fue registrado con exito!")
        self.update_table()

    # Stretch para la tabla

    def strech_table(self):
        horizontal_table_p = self.table_patient.horizontalHeader()
        for i in range(7):
            horizontal_table_p.setSectionResizeMode(
            i, QtWidgets.QHeaderView.ResizeMode.Stretch)

        horizontal_medidas_simples = self.table_medidas.horizontalHeader()
        for i in range(4):
            horizontal_medidas_simples.setSectionResizeMode(
                i, QtWidgets.QHeaderView.ResizeMode.Stretch)

        horizontal_tabla_pliegues = self.table_pliegues_cut.horizontalHeader()
        for i in range(4):
            horizontal_tabla_pliegues.setSectionResizeMode(
                i, QtWidgets.QHeaderView.ResizeMode.Stretch)

        verticalHeader = self.table_medidas.verticalHeader()
        for i in range(4):
            verticalHeader.setSectionResizeMode(
                i, QtWidgets.QHeaderView.ResizeMode.Stretch)

        verticalHeader = self.table_pliegues_cut.verticalHeader()
        for i in range(5):
            verticalHeader.setSectionResizeMode(
                i, QtWidgets.QHeaderView.ResizeMode.Stretch)

    # Animaciones para el side menu y sus opciones

    def side_menu(self):
        width = self.menu.width()

        Ui_MainWindow.animation(self, width, "left")

    def side_menu_op(self):
        width = self.menu.width()

        Ui_MainWindow.animation_op(self, width, "left")

    def animation(self, left_box_width, direction):
        right_width = 0
        left_width = 0

        if left_box_width == 51 and direction == "left":
            left_width = 240
            tg_menu = QtGui.QIcon()
            tg_menu.addPixmap(QtGui.QPixmap("icons/left.png"), QtGui.QIcon.Mode.Normal,
                              QtGui.QIcon.State.Off)
            self.selected_op(self.btn_menu)
            self.btn_menu.setIcon(tg_menu)
        else:
            tg_menu = QtGui.QIcon()
            tg_menu.addPixmap(QtGui.QPixmap("icons/menu-lockw.png"), QtGui.QIcon.Mode.Normal,
                              QtGui.QIcon.State.Off)
            self.deselected_op(self.btn_menu)
            self.btn_menu.setIcon(tg_menu)
            left_width = 51

        self.left_box = QPropertyAnimation(self.menu, b"minimumWidth")
        self.left_box.setDuration(Settings.TIME_ANIMATION)
        self.left_box.setStartValue(left_box_width)
        self.left_box.setEndValue(left_width)
        self.left_box.setEasingCurve(QEasingCurve.Type.InOutQuart)

        self.group = QParallelAnimationGroup()
        self.group.addAnimation(self.left_box)
        self.group.start()

    def animation_op(self, left_box_width, direction):
        right_width = 0
        left_width = 0

        if left_box_width == 240 and direction == "left":
            tg_menu = QtGui.QIcon()
            tg_menu.addPixmap(QtGui.QPixmap("icons/menu-lockw.png"), QtGui.QIcon.Mode.Normal,
                              QtGui.QIcon.State.Off)
            self.deselected_op(self.btn_menu)
            self.btn_menu.setIcon(tg_menu)
            left_width = 51

            self.left_box = QPropertyAnimation(self.menu, b"minimumWidth")
            self.left_box.setDuration(Settings.TIME_ANIMATION)
            self.left_box.setStartValue(left_box_width)
            self.left_box.setEndValue(left_width)
            self.left_box.setEasingCurve(QEasingCurve.Type.InOutQuart)

            self.op = QParallelAnimationGroup()
            self.op.addAnimation(self.left_box)
            self.op.start()

    def selected_op(self, btn):
        btn.setStyleSheet("QPushButton {\n"
                          "background-color: rgb(0, 0, 30);\n"
                          "color: white;\n"
                          "border-left: 3px solid;\n"
                          "border-color: rgb(255, 255, 255);\n"
                          "}")

    def deselected_op(self, btn):
        btn.setStyleSheet("QPushButton {\n"
                          "border: 0px solid;\n"
                          "color: white;\n"
                          "text-align: left;\n"
                          "padding-left: 9px;\n"
                          "}\n"
                          "\n"
                          "QPushButton:hover {\n"
                          "background-color: rgb(0, 0, 30);\n"
                          "color: white;\n"
                          "border-left: 3px solid;\n"
                          "border-color: rgb(255, 255, 255);\n"
                          "}")

    def volver_pacientes(self):
        self.content_patient.setCurrentIndex(0)

class Patient:
    def __init__(self, id, name, doc, t_pac, sex, country, fecha, hora, medidas):
        self.id = id
        self.name = name
        self.doc = doc
        self.t_pac = t_pac
        self.sex = sex
        self.country = country
        self.fecha = fecha
        self.hora = hora
        self.medidas = medidas

    def get_id(self):
        return self.id

    def get_name(self):
        return self.name

    def get_doc(self):
        return self.doc

    def get_t_pac(self):
        return self.t_pac

    def get_sex(self):
        return self.sex

    def get_country(self):
        return self.country

    def get_fecha(self):
        return self.fecha

    def get_hora(self):
        return self.hora

    def get_medidas(self):
        return self.medidas

class InformeAdulto:
        def __init__(self, estatura, peso, profundidad_ab, triceps, subesc, biceps, cresta, pbr, pbf, pm, pmc, pa, pc):
                self.estatura = estatura
                self.peso = peso
                self.profundidad_ab = profundidad_ab
                self.tricpes = triceps
                self.subesc = subesc
                self.biceps = biceps
                self.cresta = cresta
                self.pbr = pbr
                self.pbf = pbf
                self.pm = pm
                self.pmc = pmc
                self.pa = pa
                self.pc = pc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
